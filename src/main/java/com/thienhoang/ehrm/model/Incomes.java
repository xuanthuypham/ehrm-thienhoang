package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Incomes generated by hbm2java
 */
@Entity
@Table(name = "INCOMES", catalog = "eHRM_JavaResearching")
public class Incomes implements java.io.Serializable {

	private Integer incomeId;
	private MasterDatas masterDatasByCountryId;
	private MasterDatas masterDatasByCurrencyId;
	private MasterDatas masterDatasByCalculatedBasingOnId;
	private MasterDatas masterDatasByIncomeCategoryId;
	private Periodicities periodicities;
	private VariableIntermediates variableIntermediates;
	private String incomeName;
	private boolean active;
	private boolean isPercentage;
	private BigDecimal defaultValue;
	private boolean isInNetSalary;
	private boolean isInTotalIncomesAffected;
	private boolean isInMassPay;
	private boolean isCalculatedWorkingDays;
	private String incomeClass;
	private String parameter;
	private Boolean isShowInPayslipAndBranktranfer;
	private Set<IncomeConfigs> incomeConfigses = new HashSet<IncomeConfigs>(0);
	private Set<IncomeModels> incomeModelses = new HashSet<IncomeModels>(0);
	private Set<EmployeeIncomes> employeeIncomeses = new HashSet<EmployeeIncomes>(0);

	public Incomes() {
	}

	public Incomes(MasterDatas masterDatasByCountryId, MasterDatas masterDatasByCurrencyId,
			MasterDatas masterDatasByCalculatedBasingOnId, MasterDatas masterDatasByIncomeCategoryId,
			Periodicities periodicities, VariableIntermediates variableIntermediates, boolean active,
			boolean isPercentage, BigDecimal defaultValue, boolean isInNetSalary, boolean isInTotalIncomesAffected,
			boolean isInMassPay, boolean isCalculatedWorkingDays, String incomeClass) {
		this.masterDatasByCountryId = masterDatasByCountryId;
		this.masterDatasByCurrencyId = masterDatasByCurrencyId;
		this.masterDatasByCalculatedBasingOnId = masterDatasByCalculatedBasingOnId;
		this.masterDatasByIncomeCategoryId = masterDatasByIncomeCategoryId;
		this.periodicities = periodicities;
		this.variableIntermediates = variableIntermediates;
		this.active = active;
		this.isPercentage = isPercentage;
		this.defaultValue = defaultValue;
		this.isInNetSalary = isInNetSalary;
		this.isInTotalIncomesAffected = isInTotalIncomesAffected;
		this.isInMassPay = isInMassPay;
		this.isCalculatedWorkingDays = isCalculatedWorkingDays;
		this.incomeClass = incomeClass;
	}

	public Incomes(MasterDatas masterDatasByCountryId, MasterDatas masterDatasByCurrencyId,
			MasterDatas masterDatasByCalculatedBasingOnId, MasterDatas masterDatasByIncomeCategoryId,
			Periodicities periodicities, VariableIntermediates variableIntermediates, String incomeName,
			boolean active, boolean isPercentage, BigDecimal defaultValue, boolean isInNetSalary,
			boolean isInTotalIncomesAffected, boolean isInMassPay, boolean isCalculatedWorkingDays,
			String incomeClass, String parameter, Boolean isShowInPayslipAndBranktranfer,
			Set<IncomeConfigs> incomeConfigses, Set<IncomeModels> incomeModelses,
			Set<EmployeeIncomes> employeeIncomeses) {
		this.masterDatasByCountryId = masterDatasByCountryId;
		this.masterDatasByCurrencyId = masterDatasByCurrencyId;
		this.masterDatasByCalculatedBasingOnId = masterDatasByCalculatedBasingOnId;
		this.masterDatasByIncomeCategoryId = masterDatasByIncomeCategoryId;
		this.periodicities = periodicities;
		this.variableIntermediates = variableIntermediates;
		this.incomeName = incomeName;
		this.active = active;
		this.isPercentage = isPercentage;
		this.defaultValue = defaultValue;
		this.isInNetSalary = isInNetSalary;
		this.isInTotalIncomesAffected = isInTotalIncomesAffected;
		this.isInMassPay = isInMassPay;
		this.isCalculatedWorkingDays = isCalculatedWorkingDays;
		this.incomeClass = incomeClass;
		this.parameter = parameter;
		this.isShowInPayslipAndBranktranfer = isShowInPayslipAndBranktranfer;
		this.incomeConfigses = incomeConfigses;
		this.incomeModelses = incomeModelses;
		this.employeeIncomeses = employeeIncomeses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "INCOME_ID", unique = true, nullable = false)
	public Integer getIncomeId() {
		return this.incomeId;
	}

	public void setIncomeId(Integer incomeId) {
		this.incomeId = incomeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COUNTRY_ID", nullable = false)
	public MasterDatas getMasterDatasByCountryId() {
		return this.masterDatasByCountryId;
	}

	public void setMasterDatasByCountryId(MasterDatas masterDatasByCountryId) {
		this.masterDatasByCountryId = masterDatasByCountryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CURRENCY_ID", nullable = false)
	public MasterDatas getMasterDatasByCurrencyId() {
		return this.masterDatasByCurrencyId;
	}

	public void setMasterDatasByCurrencyId(MasterDatas masterDatasByCurrencyId) {
		this.masterDatasByCurrencyId = masterDatasByCurrencyId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CALCULATED_BASING_ON_ID", nullable = false)
	public MasterDatas getMasterDatasByCalculatedBasingOnId() {
		return this.masterDatasByCalculatedBasingOnId;
	}

	public void setMasterDatasByCalculatedBasingOnId(MasterDatas masterDatasByCalculatedBasingOnId) {
		this.masterDatasByCalculatedBasingOnId = masterDatasByCalculatedBasingOnId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INCOME_CATEGORY_ID", nullable = false)
	public MasterDatas getMasterDatasByIncomeCategoryId() {
		return this.masterDatasByIncomeCategoryId;
	}

	public void setMasterDatasByIncomeCategoryId(MasterDatas masterDatasByIncomeCategoryId) {
		this.masterDatasByIncomeCategoryId = masterDatasByIncomeCategoryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERIODICITY_ID", nullable = false)
	public Periodicities getPeriodicities() {
		return this.periodicities;
	}

	public void setPeriodicities(Periodicities periodicities) {
		this.periodicities = periodicities;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VARIABLE_INTERMEDIATE_ID", nullable = false)
	public VariableIntermediates getVariableIntermediates() {
		return this.variableIntermediates;
	}

	public void setVariableIntermediates(VariableIntermediates variableIntermediates) {
		this.variableIntermediates = variableIntermediates;
	}

	@Column(name = "INCOME_NAME")
	public String getIncomeName() {
		return this.incomeName;
	}

	public void setIncomeName(String incomeName) {
		this.incomeName = incomeName;
	}

	@Column(name = "ACTIVE", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "IS_PERCENTAGE", nullable = false)
	public boolean isIsPercentage() {
		return this.isPercentage;
	}

	public void setIsPercentage(boolean isPercentage) {
		this.isPercentage = isPercentage;
	}

	@Column(name = "DEFAULT_VALUE", nullable = false, precision = 18)
	public BigDecimal getDefaultValue() {
		return this.defaultValue;
	}

	public void setDefaultValue(BigDecimal defaultValue) {
		this.defaultValue = defaultValue;
	}

	@Column(name = "IS_IN_NET_SALARY", nullable = false)
	public boolean isIsInNetSalary() {
		return this.isInNetSalary;
	}

	public void setIsInNetSalary(boolean isInNetSalary) {
		this.isInNetSalary = isInNetSalary;
	}

	@Column(name = "IS_IN_TOTAL_INCOMES_AFFECTED", nullable = false)
	public boolean isIsInTotalIncomesAffected() {
		return this.isInTotalIncomesAffected;
	}

	public void setIsInTotalIncomesAffected(boolean isInTotalIncomesAffected) {
		this.isInTotalIncomesAffected = isInTotalIncomesAffected;
	}

	@Column(name = "IS_IN_MASS_PAY", nullable = false)
	public boolean isIsInMassPay() {
		return this.isInMassPay;
	}

	public void setIsInMassPay(boolean isInMassPay) {
		this.isInMassPay = isInMassPay;
	}

	@Column(name = "IS_CALCULATED_WORKING_DAYS", nullable = false)
	public boolean isIsCalculatedWorkingDays() {
		return this.isCalculatedWorkingDays;
	}

	public void setIsCalculatedWorkingDays(boolean isCalculatedWorkingDays) {
		this.isCalculatedWorkingDays = isCalculatedWorkingDays;
	}

	@Column(name = "INCOME_CLASS", nullable = false)
	public String getIncomeClass() {
		return this.incomeClass;
	}

	public void setIncomeClass(String incomeClass) {
		this.incomeClass = incomeClass;
	}

	@Column(name = "PARAMETER")
	public String getParameter() {
		return this.parameter;
	}

	public void setParameter(String parameter) {
		this.parameter = parameter;
	}

	@Column(name = "IS_SHOW_IN_PAYSLIP_AND_BRANKTRANFER")
	public Boolean getIsShowInPayslipAndBranktranfer() {
		return this.isShowInPayslipAndBranktranfer;
	}

	public void setIsShowInPayslipAndBranktranfer(Boolean isShowInPayslipAndBranktranfer) {
		this.isShowInPayslipAndBranktranfer = isShowInPayslipAndBranktranfer;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "incomes")
	public Set<IncomeConfigs> getIncomeConfigses() {
		return this.incomeConfigses;
	}

	public void setIncomeConfigses(Set<IncomeConfigs> incomeConfigses) {
		this.incomeConfigses = incomeConfigses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "incomes")
	public Set<IncomeModels> getIncomeModelses() {
		return this.incomeModelses;
	}

	public void setIncomeModelses(Set<IncomeModels> incomeModelses) {
		this.incomeModelses = incomeModelses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "incomes")
	public Set<EmployeeIncomes> getEmployeeIncomeses() {
		return this.employeeIncomeses;
	}

	public void setEmployeeIncomeses(Set<EmployeeIncomes> employeeIncomeses) {
		this.employeeIncomeses = employeeIncomeses;
	}

}
