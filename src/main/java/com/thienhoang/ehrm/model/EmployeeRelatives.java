package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EmployeeRelatives generated by hbm2java
 */
@Entity
@Table(name = "EMPLOYEE_RELATIVES", catalog = "eHRM_JavaResearching")
public class EmployeeRelatives implements java.io.Serializable {

	private Integer employeeRelativeId;
	private Employees employees;
	private MasterDatas masterDatasByRelativeTypeId;
	private MasterDatas masterDatasByGender;
	private String firstName;
	private String lastName;
	private String middleName;
	private String idCard;
	private String contact;
	private Date dateOfBirth;
	private boolean isGuarantor;
	private Set<EmployeeDependants> employeeDependantses = new HashSet<EmployeeDependants>(0);

	public EmployeeRelatives() {
	}

	public EmployeeRelatives(Employees employees, MasterDatas masterDatasByRelativeTypeId,
			MasterDatas masterDatasByGender, String firstName, String lastName, String middleName,
			boolean isGuarantor) {
		this.employees = employees;
		this.masterDatasByRelativeTypeId = masterDatasByRelativeTypeId;
		this.masterDatasByGender = masterDatasByGender;
		this.firstName = firstName;
		this.lastName = lastName;
		this.middleName = middleName;
		this.isGuarantor = isGuarantor;
	}

	public EmployeeRelatives(Employees employees, MasterDatas masterDatasByRelativeTypeId,
			MasterDatas masterDatasByGender, String firstName, String lastName, String middleName,
			String idCard, String contact, Date dateOfBirth, boolean isGuarantor,
			Set<EmployeeDependants> employeeDependantses) {
		this.employees = employees;
		this.masterDatasByRelativeTypeId = masterDatasByRelativeTypeId;
		this.masterDatasByGender = masterDatasByGender;
		this.firstName = firstName;
		this.lastName = lastName;
		this.middleName = middleName;
		this.idCard = idCard;
		this.contact = contact;
		this.dateOfBirth = dateOfBirth;
		this.isGuarantor = isGuarantor;
		this.employeeDependantses = employeeDependantses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "EMPLOYEE_RELATIVE_ID", unique = true, nullable = false)
	public Integer getEmployeeRelativeId() {
		return this.employeeRelativeId;
	}

	public void setEmployeeRelativeId(Integer employeeRelativeId) {
		this.employeeRelativeId = employeeRelativeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_ID", nullable = false)
	public Employees getEmployees() {
		return this.employees;
	}

	public void setEmployees(Employees employees) {
		this.employees = employees;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RELATIVE_TYPE_ID", nullable = false)
	public MasterDatas getMasterDatasByRelativeTypeId() {
		return this.masterDatasByRelativeTypeId;
	}

	public void setMasterDatasByRelativeTypeId(MasterDatas masterDatasByRelativeTypeId) {
		this.masterDatasByRelativeTypeId = masterDatasByRelativeTypeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GENDER", nullable = false)
	public MasterDatas getMasterDatasByGender() {
		return this.masterDatasByGender;
	}

	public void setMasterDatasByGender(MasterDatas masterDatasByGender) {
		this.masterDatasByGender = masterDatasByGender;
	}

	@Column(name = "FIRST_NAME", nullable = false)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", nullable = false)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "MIDDLE_NAME", nullable = false)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "ID_CARD")
	public String getIdCard() {
		return this.idCard;
	}

	public void setIdCard(String idCard) {
		this.idCard = idCard;
	}

	@Column(name = "CONTACT")
	public String getContact() {
		return this.contact;
	}

	public void setContact(String contact) {
		this.contact = contact;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_OF_BIRTH", length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "IS_GUARANTOR", nullable = false)
	public boolean isIsGuarantor() {
		return this.isGuarantor;
	}

	public void setIsGuarantor(boolean isGuarantor) {
		this.isGuarantor = isGuarantor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeRelatives")
	public Set<EmployeeDependants> getEmployeeDependantses() {
		return this.employeeDependantses;
	}

	public void setEmployeeDependantses(Set<EmployeeDependants> employeeDependantses) {
		this.employeeDependantses = employeeDependantses;
	}

}
