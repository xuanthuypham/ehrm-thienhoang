package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * LeaveCarryForwardRequestHistories generated by hbm2java
 */
@Entity
@Table(name = "LEAVE_CARRY_FORWARD_REQUEST_HISTORIES", catalog = "eHRM_JavaResearching")
public class LeaveCarryForwardRequestHistories implements java.io.Serializable {

	private Integer requestHistoryId;
	private Employees employees;
	private LeaveCarryForwardRequests leaveCarryForwardRequests;
	private MasterDatas masterDatas;
	private Date modifiedDate;
	private Serializable comment;

	public LeaveCarryForwardRequestHistories() {
	}

	public LeaveCarryForwardRequestHistories(Employees employees, LeaveCarryForwardRequests leaveCarryForwardRequests,
			MasterDatas masterDatas, Date modifiedDate) {
		this.employees = employees;
		this.leaveCarryForwardRequests = leaveCarryForwardRequests;
		this.masterDatas = masterDatas;
		this.modifiedDate = modifiedDate;
	}

	public LeaveCarryForwardRequestHistories(Employees employees, LeaveCarryForwardRequests leaveCarryForwardRequests,
			MasterDatas masterDatas, Date modifiedDate, Serializable comment) {
		this.employees = employees;
		this.leaveCarryForwardRequests = leaveCarryForwardRequests;
		this.masterDatas = masterDatas;
		this.modifiedDate = modifiedDate;
		this.comment = comment;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "REQUEST_HISTORY_ID", unique = true, nullable = false)
	public Integer getRequestHistoryId() {
		return this.requestHistoryId;
	}

	public void setRequestHistoryId(Integer requestHistoryId) {
		this.requestHistoryId = requestHistoryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "APPROVER_ID", nullable = false)
	public Employees getEmployees() {
		return this.employees;
	}

	public void setEmployees(Employees employees) {
		this.employees = employees;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REQUEST_ID", nullable = false)
	public LeaveCarryForwardRequests getLeaveCarryForwardRequests() {
		return this.leaveCarryForwardRequests;
	}

	public void setLeaveCarryForwardRequests(LeaveCarryForwardRequests leaveCarryForwardRequests) {
		this.leaveCarryForwardRequests = leaveCarryForwardRequests;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REQUEST_HISTORY_STATUS_ID", nullable = false)
	public MasterDatas getMasterDatas() {
		return this.masterDatas;
	}

	public void setMasterDatas(MasterDatas masterDatas) {
		this.masterDatas = masterDatas;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "MODIFIED_DATE", nullable = false, length = 10)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	@Column(name = "COMMENT")
	public Serializable getComment() {
		return this.comment;
	}

	public void setComment(Serializable comment) {
		this.comment = comment;
	}

}
