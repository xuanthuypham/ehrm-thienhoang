package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Projects generated by hbm2java
 */
@Entity
@Table(name = "PROJECTS", catalog = "eHRM_JavaResearching", uniqueConstraints = @UniqueConstraint(columnNames = "PROJECT_CODE"))
public class Projects implements java.io.Serializable {

	private Integer projectId;
	private MasterDatas masterDatas;
	private String projectCode;
	private String projectName;
	private String description;
	private Set<AprovalTripcosts> aprovalTripcostses = new HashSet<AprovalTripcosts>(0);
	private Set<TripLocationProjects> tripLocationProjectses = new HashSet<TripLocationProjects>(0);
	private Set<TimeSheetHistories> timeSheetHistorieses = new HashSet<TimeSheetHistories>(0);
	private Set<ProjectDefaults> projectDefaultses = new HashSet<ProjectDefaults>(0);
	private int status;
	public Projects() {
	}

	public Projects(MasterDatas masterDatas, String projectCode, String projectName) {
		this.masterDatas = masterDatas;
		this.projectCode = projectCode;
		this.projectName = projectName;
	}
	public Projects(String code, String name, String description,MasterDatas masterDatas) {
		
		this.projectCode = code;
		this.projectName = name;
		this.description = description;
		this.masterDatas = masterDatas;
	}

	public Projects(MasterDatas masterDatas, String projectCode, String projectName,
			String description, Set<AprovalTripcosts> aprovalTripcostses,
			Set<TripLocationProjects> tripLocationProjectses, Set<TimeSheetHistories> timeSheetHistorieses,
			Set<ProjectDefaults> projectDefaultses) {
		this.masterDatas = masterDatas;
		this.projectCode = projectCode;
		this.projectName = projectName;
		this.description = description;
		this.aprovalTripcostses = aprovalTripcostses;
		this.tripLocationProjectses = tripLocationProjectses;
		this.timeSheetHistorieses = timeSheetHistorieses;
		this.projectDefaultses = projectDefaultses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "PROJECT_ID", unique = true, nullable = false)
	public Integer getProjectId() {
		return this.projectId;
	}

	public void setProjectId(Integer projectId) {
		this.projectId = projectId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STATUS", nullable = false)
	public MasterDatas getMasterDatas() {
		return this.masterDatas;
	}

	public void setMasterDatas(MasterDatas masterDatas) {
		this.masterDatas = masterDatas;
	}

	@Column(name = "PROJECT_CODE", unique = true, nullable = false)
	public String getProjectCode() {
		return this.projectCode;
	}

	public void setProjectCode(String projectCode) {
		this.projectCode = projectCode;
	}

	@Column(name = "PROJECT_NAME", nullable = false)
	public String getProjectName() {
		return this.projectName;
	}

	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projects")
	public Set<AprovalTripcosts> getAprovalTripcostses() {
		return this.aprovalTripcostses;
	}

	public void setAprovalTripcostses(Set<AprovalTripcosts> aprovalTripcostses) {
		this.aprovalTripcostses = aprovalTripcostses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projects")
	public Set<TripLocationProjects> getTripLocationProjectses() {
		return this.tripLocationProjectses;
	}

	public void setTripLocationProjectses(Set<TripLocationProjects> tripLocationProjectses) {
		this.tripLocationProjectses = tripLocationProjectses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projects")
	public Set<TimeSheetHistories> getTimeSheetHistorieses() {
		return this.timeSheetHistorieses;
	}

	public void setTimeSheetHistorieses(Set<TimeSheetHistories> timeSheetHistorieses) {
		this.timeSheetHistorieses = timeSheetHistorieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projects")
	public Set<ProjectDefaults> getProjectDefaultses() {
		return this.projectDefaultses;
	}

	public void setProjectDefaultses(Set<ProjectDefaults> projectDefaultses) {
		this.projectDefaultses = projectDefaultses;
	}

}
