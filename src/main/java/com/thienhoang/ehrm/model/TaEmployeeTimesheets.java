package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TaEmployeeTimesheets generated by hbm2java
 */
@Entity
@Table(name = "TA_EMPLOYEE_TIMESHEETS", catalog = "eHRM_JavaResearching")
public class TaEmployeeTimesheets implements java.io.Serializable {

	private Integer employeeTimesheetId;
	private Employees employees;
	private MasterDatas masterDatas;
	private TaTimekeepers taTimekeepersByTimekeeperInId;
	private TaTimekeepers taTimekeepersByTimekeeperOutId;
	private TaWorkingShifts taWorkingShiftsByScheduledShiftId;
	private TaWorkingShifts taWorkingShiftsByApprovedShiftId;
	private TaWorkingShifts taWorkingShiftsByActualShiftId;
	private TaWorkingTypes taWorkingTypes;
	private TimeSheets timeSheets;
	private Serializable sweptCode;
	private Date workingDate;
	private Date timeIn;
	private Date timeOut;
	private Date adjustedTimeIn;
	private Date adjustedTimeOut;
	private Boolean approved;
	private Boolean statusIn;
	private Boolean statusOut;
	private Set<TaEmployeeLateInEarlyOut> taEmployeeLateInEarlyOuts = new HashSet<TaEmployeeLateInEarlyOut>(0);
	private Set<TaEmployeeOvertimes> taEmployeeOvertimeses = new HashSet<TaEmployeeOvertimes>(0);

	public TaEmployeeTimesheets() {
	}

	public TaEmployeeTimesheets(MasterDatas masterDatas, Date workingDate) {
		this.masterDatas = masterDatas;
		this.workingDate = workingDate;
	}

	public TaEmployeeTimesheets(Employees employees, MasterDatas masterDatas,
			TaTimekeepers taTimekeepersByTimekeeperInId, TaTimekeepers taTimekeepersByTimekeeperOutId,
			TaWorkingShifts taWorkingShiftsByScheduledShiftId, TaWorkingShifts taWorkingShiftsByApprovedShiftId,
			TaWorkingShifts taWorkingShiftsByActualShiftId, TaWorkingTypes taWorkingTypes, TimeSheets timeSheets,
			Serializable sweptCode, Date workingDate, Date timeIn, Date timeOut, Date adjustedTimeIn,
			Date adjustedTimeOut, Boolean approved, Boolean statusIn, Boolean statusOut,
			Set<TaEmployeeLateInEarlyOut> taEmployeeLateInEarlyOuts, Set<TaEmployeeOvertimes> taEmployeeOvertimeses) {
		this.employees = employees;
		this.masterDatas = masterDatas;
		this.taTimekeepersByTimekeeperInId = taTimekeepersByTimekeeperInId;
		this.taTimekeepersByTimekeeperOutId = taTimekeepersByTimekeeperOutId;
		this.taWorkingShiftsByScheduledShiftId = taWorkingShiftsByScheduledShiftId;
		this.taWorkingShiftsByApprovedShiftId = taWorkingShiftsByApprovedShiftId;
		this.taWorkingShiftsByActualShiftId = taWorkingShiftsByActualShiftId;
		this.taWorkingTypes = taWorkingTypes;
		this.timeSheets = timeSheets;
		this.sweptCode = sweptCode;
		this.workingDate = workingDate;
		this.timeIn = timeIn;
		this.timeOut = timeOut;
		this.adjustedTimeIn = adjustedTimeIn;
		this.adjustedTimeOut = adjustedTimeOut;
		this.approved = approved;
		this.statusIn = statusIn;
		this.statusOut = statusOut;
		this.taEmployeeLateInEarlyOuts = taEmployeeLateInEarlyOuts;
		this.taEmployeeOvertimeses = taEmployeeOvertimeses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "EMPLOYEE_TIMESHEET_ID", unique = true, nullable = false)
	public Integer getEmployeeTimesheetId() {
		return this.employeeTimesheetId;
	}

	public void setEmployeeTimesheetId(Integer employeeTimesheetId) {
		this.employeeTimesheetId = employeeTimesheetId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_ID")
	public Employees getEmployees() {
		return this.employees;
	}

	public void setEmployees(Employees employees) {
		this.employees = employees;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_TIMESHEET_STATUS_ID", nullable = false)
	public MasterDatas getMasterDatas() {
		return this.masterDatas;
	}

	public void setMasterDatas(MasterDatas masterDatas) {
		this.masterDatas = masterDatas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIMEKEEPER_IN_ID")
	public TaTimekeepers getTaTimekeepersByTimekeeperInId() {
		return this.taTimekeepersByTimekeeperInId;
	}

	public void setTaTimekeepersByTimekeeperInId(TaTimekeepers taTimekeepersByTimekeeperInId) {
		this.taTimekeepersByTimekeeperInId = taTimekeepersByTimekeeperInId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIMEKEEPER_OUT_ID")
	public TaTimekeepers getTaTimekeepersByTimekeeperOutId() {
		return this.taTimekeepersByTimekeeperOutId;
	}

	public void setTaTimekeepersByTimekeeperOutId(TaTimekeepers taTimekeepersByTimekeeperOutId) {
		this.taTimekeepersByTimekeeperOutId = taTimekeepersByTimekeeperOutId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SCHEDULED_SHIFT_ID")
	public TaWorkingShifts getTaWorkingShiftsByScheduledShiftId() {
		return this.taWorkingShiftsByScheduledShiftId;
	}

	public void setTaWorkingShiftsByScheduledShiftId(TaWorkingShifts taWorkingShiftsByScheduledShiftId) {
		this.taWorkingShiftsByScheduledShiftId = taWorkingShiftsByScheduledShiftId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "APPROVED_SHIFT_ID")
	public TaWorkingShifts getTaWorkingShiftsByApprovedShiftId() {
		return this.taWorkingShiftsByApprovedShiftId;
	}

	public void setTaWorkingShiftsByApprovedShiftId(TaWorkingShifts taWorkingShiftsByApprovedShiftId) {
		this.taWorkingShiftsByApprovedShiftId = taWorkingShiftsByApprovedShiftId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACTUAL_SHIFT_ID")
	public TaWorkingShifts getTaWorkingShiftsByActualShiftId() {
		return this.taWorkingShiftsByActualShiftId;
	}

	public void setTaWorkingShiftsByActualShiftId(TaWorkingShifts taWorkingShiftsByActualShiftId) {
		this.taWorkingShiftsByActualShiftId = taWorkingShiftsByActualShiftId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "APPROVED_WORKING_TYPE_ID")
	public TaWorkingTypes getTaWorkingTypes() {
		return this.taWorkingTypes;
	}

	public void setTaWorkingTypes(TaWorkingTypes taWorkingTypes) {
		this.taWorkingTypes = taWorkingTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIME_SHEET_ID")
	public TimeSheets getTimeSheets() {
		return this.timeSheets;
	}

	public void setTimeSheets(TimeSheets timeSheets) {
		this.timeSheets = timeSheets;
	}

	@Column(name = "SWEPT_CODE")
	public Serializable getSweptCode() {
		return this.sweptCode;
	}

	public void setSweptCode(Serializable sweptCode) {
		this.sweptCode = sweptCode;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "WORKING_DATE", nullable = false, length = 10)
	public Date getWorkingDate() {
		return this.workingDate;
	}

	public void setWorkingDate(Date workingDate) {
		this.workingDate = workingDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIME_IN", length = 23)
	public Date getTimeIn() {
		return this.timeIn;
	}

	public void setTimeIn(Date timeIn) {
		this.timeIn = timeIn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIME_OUT", length = 23)
	public Date getTimeOut() {
		return this.timeOut;
	}

	public void setTimeOut(Date timeOut) {
		this.timeOut = timeOut;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ADJUSTED_TIME_IN", length = 23)
	public Date getAdjustedTimeIn() {
		return this.adjustedTimeIn;
	}

	public void setAdjustedTimeIn(Date adjustedTimeIn) {
		this.adjustedTimeIn = adjustedTimeIn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ADJUSTED_TIME_OUT", length = 23)
	public Date getAdjustedTimeOut() {
		return this.adjustedTimeOut;
	}

	public void setAdjustedTimeOut(Date adjustedTimeOut) {
		this.adjustedTimeOut = adjustedTimeOut;
	}

	@Column(name = "APPROVED")
	public Boolean getApproved() {
		return this.approved;
	}

	public void setApproved(Boolean approved) {
		this.approved = approved;
	}

	@Column(name = "STATUS_IN")
	public Boolean getStatusIn() {
		return this.statusIn;
	}

	public void setStatusIn(Boolean statusIn) {
		this.statusIn = statusIn;
	}

	@Column(name = "STATUS_OUT")
	public Boolean getStatusOut() {
		return this.statusOut;
	}

	public void setStatusOut(Boolean statusOut) {
		this.statusOut = statusOut;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taEmployeeTimesheets")
	public Set<TaEmployeeLateInEarlyOut> getTaEmployeeLateInEarlyOuts() {
		return this.taEmployeeLateInEarlyOuts;
	}

	public void setTaEmployeeLateInEarlyOuts(Set<TaEmployeeLateInEarlyOut> taEmployeeLateInEarlyOuts) {
		this.taEmployeeLateInEarlyOuts = taEmployeeLateInEarlyOuts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taEmployeeTimesheets")
	public Set<TaEmployeeOvertimes> getTaEmployeeOvertimeses() {
		return this.taEmployeeOvertimeses;
	}

	public void setTaEmployeeOvertimeses(Set<TaEmployeeOvertimes> taEmployeeOvertimeses) {
		this.taEmployeeOvertimeses = taEmployeeOvertimeses;
	}

}
