package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TaWorkingShifts generated by hbm2java
 */
@Entity
@Table(name = "TA_WORKING_SHIFTS", catalog = "eHRM_JavaResearching")
public class TaWorkingShifts implements java.io.Serializable {

	private Integer workingShiftId;
	private Serializable workingShiftCode;
	private Serializable workingShiftName;
	private Date workingStart;
	private Date workingEnd;
	private Integer adjustTime;
	private Boolean nightShift;
	private Boolean splitShift;
	private Date breakingStart;
	private Date breakingEnd;
	private Serializable remark;
	private Set<TaShiftChangeSetting> taShiftChangeSettingsForPreviousWorkingShiftId = new HashSet<TaShiftChangeSetting>(
			0);
	private Set<TaMealTimeSetting> taMealTimeSettings = new HashSet<TaMealTimeSetting>(0);
	private Set<TaOvertimeSchedules> taOvertimeScheduleses = new HashSet<TaOvertimeSchedules>(0);
	private Set<TaShiftChangeSetting> taShiftChangeSettingsForMovedWorkingShiftId = new HashSet<TaShiftChangeSetting>(
			0);
	private Set<TaEmployeeTimesheets> taEmployeeTimesheetsesForScheduledShiftId = new HashSet<TaEmployeeTimesheets>(0);
	private Set<TaWorkingSchedules> taWorkingScheduleses = new HashSet<TaWorkingSchedules>(0);
	private Set<TaEmployeeTimesheets> taEmployeeTimesheetsesForApprovedShiftId = new HashSet<TaEmployeeTimesheets>(0);
	private Set<TaEmployeeTimesheets> taEmployeeTimesheetsesForActualShiftId = new HashSet<TaEmployeeTimesheets>(0);
	private Set<TaShiftChangeSetting> taShiftChangeSettingsForCurrentWorkingShiftId = new HashSet<TaShiftChangeSetting>(
			0);

	public TaWorkingShifts() {
	}

	public TaWorkingShifts(Serializable workingShiftName, Date workingStart, Date workingEnd) {
		this.workingShiftName = workingShiftName;
		this.workingStart = workingStart;
		this.workingEnd = workingEnd;
	}

	public TaWorkingShifts(Serializable workingShiftCode, Serializable workingShiftName, Date workingStart,
			Date workingEnd, Integer adjustTime, Boolean nightShift, Boolean splitShift, Date breakingStart,
			Date breakingEnd, Serializable remark,
			Set<TaShiftChangeSetting> taShiftChangeSettingsForPreviousWorkingShiftId,
			Set<TaMealTimeSetting> taMealTimeSettings, Set<TaOvertimeSchedules> taOvertimeScheduleses,
			Set<TaShiftChangeSetting> taShiftChangeSettingsForMovedWorkingShiftId,
			Set<TaEmployeeTimesheets> taEmployeeTimesheetsesForScheduledShiftId,
			Set<TaWorkingSchedules> taWorkingScheduleses,
			Set<TaEmployeeTimesheets> taEmployeeTimesheetsesForApprovedShiftId,
			Set<TaEmployeeTimesheets> taEmployeeTimesheetsesForActualShiftId,
			Set<TaShiftChangeSetting> taShiftChangeSettingsForCurrentWorkingShiftId) {
		this.workingShiftCode = workingShiftCode;
		this.workingShiftName = workingShiftName;
		this.workingStart = workingStart;
		this.workingEnd = workingEnd;
		this.adjustTime = adjustTime;
		this.nightShift = nightShift;
		this.splitShift = splitShift;
		this.breakingStart = breakingStart;
		this.breakingEnd = breakingEnd;
		this.remark = remark;
		this.taShiftChangeSettingsForPreviousWorkingShiftId = taShiftChangeSettingsForPreviousWorkingShiftId;
		this.taMealTimeSettings = taMealTimeSettings;
		this.taOvertimeScheduleses = taOvertimeScheduleses;
		this.taShiftChangeSettingsForMovedWorkingShiftId = taShiftChangeSettingsForMovedWorkingShiftId;
		this.taEmployeeTimesheetsesForScheduledShiftId = taEmployeeTimesheetsesForScheduledShiftId;
		this.taWorkingScheduleses = taWorkingScheduleses;
		this.taEmployeeTimesheetsesForApprovedShiftId = taEmployeeTimesheetsesForApprovedShiftId;
		this.taEmployeeTimesheetsesForActualShiftId = taEmployeeTimesheetsesForActualShiftId;
		this.taShiftChangeSettingsForCurrentWorkingShiftId = taShiftChangeSettingsForCurrentWorkingShiftId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "WORKING_SHIFT_ID", unique = true, nullable = false)
	public Integer getWorkingShiftId() {
		return this.workingShiftId;
	}

	public void setWorkingShiftId(Integer workingShiftId) {
		this.workingShiftId = workingShiftId;
	}

	@Column(name = "WORKING_SHIFT_CODE")
	public Serializable getWorkingShiftCode() {
		return this.workingShiftCode;
	}

	public void setWorkingShiftCode(Serializable workingShiftCode) {
		this.workingShiftCode = workingShiftCode;
	}

	@Column(name = "WORKING_SHIFT_NAME", nullable = false)
	public Serializable getWorkingShiftName() {
		return this.workingShiftName;
	}

	public void setWorkingShiftName(Serializable workingShiftName) {
		this.workingShiftName = workingShiftName;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "WORKING_START", nullable = false, length = 16)
	public Date getWorkingStart() {
		return this.workingStart;
	}

	public void setWorkingStart(Date workingStart) {
		this.workingStart = workingStart;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "WORKING_END", nullable = false, length = 16)
	public Date getWorkingEnd() {
		return this.workingEnd;
	}

	public void setWorkingEnd(Date workingEnd) {
		this.workingEnd = workingEnd;
	}

	@Column(name = "ADJUST_TIME")
	public Integer getAdjustTime() {
		return this.adjustTime;
	}

	public void setAdjustTime(Integer adjustTime) {
		this.adjustTime = adjustTime;
	}

	@Column(name = "NIGHT_SHIFT")
	public Boolean getNightShift() {
		return this.nightShift;
	}

	public void setNightShift(Boolean nightShift) {
		this.nightShift = nightShift;
	}

	@Column(name = "SPLIT_SHIFT")
	public Boolean getSplitShift() {
		return this.splitShift;
	}

	public void setSplitShift(Boolean splitShift) {
		this.splitShift = splitShift;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "BREAKING_START", length = 16)
	public Date getBreakingStart() {
		return this.breakingStart;
	}

	public void setBreakingStart(Date breakingStart) {
		this.breakingStart = breakingStart;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "BREAKING_END", length = 16)
	public Date getBreakingEnd() {
		return this.breakingEnd;
	}

	public void setBreakingEnd(Date breakingEnd) {
		this.breakingEnd = breakingEnd;
	}

	@Column(name = "REMARK")
	public Serializable getRemark() {
		return this.remark;
	}

	public void setRemark(Serializable remark) {
		this.remark = remark;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taWorkingShiftsByPreviousWorkingShiftId")
	public Set<TaShiftChangeSetting> getTaShiftChangeSettingsForPreviousWorkingShiftId() {
		return this.taShiftChangeSettingsForPreviousWorkingShiftId;
	}

	public void setTaShiftChangeSettingsForPreviousWorkingShiftId(
			Set<TaShiftChangeSetting> taShiftChangeSettingsForPreviousWorkingShiftId) {
		this.taShiftChangeSettingsForPreviousWorkingShiftId = taShiftChangeSettingsForPreviousWorkingShiftId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taWorkingShifts")
	public Set<TaMealTimeSetting> getTaMealTimeSettings() {
		return this.taMealTimeSettings;
	}

	public void setTaMealTimeSettings(Set<TaMealTimeSetting> taMealTimeSettings) {
		this.taMealTimeSettings = taMealTimeSettings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taWorkingShifts")
	public Set<TaOvertimeSchedules> getTaOvertimeScheduleses() {
		return this.taOvertimeScheduleses;
	}

	public void setTaOvertimeScheduleses(Set<TaOvertimeSchedules> taOvertimeScheduleses) {
		this.taOvertimeScheduleses = taOvertimeScheduleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taWorkingShiftsByMovedWorkingShiftId")
	public Set<TaShiftChangeSetting> getTaShiftChangeSettingsForMovedWorkingShiftId() {
		return this.taShiftChangeSettingsForMovedWorkingShiftId;
	}

	public void setTaShiftChangeSettingsForMovedWorkingShiftId(
			Set<TaShiftChangeSetting> taShiftChangeSettingsForMovedWorkingShiftId) {
		this.taShiftChangeSettingsForMovedWorkingShiftId = taShiftChangeSettingsForMovedWorkingShiftId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taWorkingShiftsByScheduledShiftId")
	public Set<TaEmployeeTimesheets> getTaEmployeeTimesheetsesForScheduledShiftId() {
		return this.taEmployeeTimesheetsesForScheduledShiftId;
	}

	public void setTaEmployeeTimesheetsesForScheduledShiftId(
			Set<TaEmployeeTimesheets> taEmployeeTimesheetsesForScheduledShiftId) {
		this.taEmployeeTimesheetsesForScheduledShiftId = taEmployeeTimesheetsesForScheduledShiftId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taWorkingShifts")
	public Set<TaWorkingSchedules> getTaWorkingScheduleses() {
		return this.taWorkingScheduleses;
	}

	public void setTaWorkingScheduleses(Set<TaWorkingSchedules> taWorkingScheduleses) {
		this.taWorkingScheduleses = taWorkingScheduleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taWorkingShiftsByApprovedShiftId")
	public Set<TaEmployeeTimesheets> getTaEmployeeTimesheetsesForApprovedShiftId() {
		return this.taEmployeeTimesheetsesForApprovedShiftId;
	}

	public void setTaEmployeeTimesheetsesForApprovedShiftId(
			Set<TaEmployeeTimesheets> taEmployeeTimesheetsesForApprovedShiftId) {
		this.taEmployeeTimesheetsesForApprovedShiftId = taEmployeeTimesheetsesForApprovedShiftId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taWorkingShiftsByActualShiftId")
	public Set<TaEmployeeTimesheets> getTaEmployeeTimesheetsesForActualShiftId() {
		return this.taEmployeeTimesheetsesForActualShiftId;
	}

	public void setTaEmployeeTimesheetsesForActualShiftId(
			Set<TaEmployeeTimesheets> taEmployeeTimesheetsesForActualShiftId) {
		this.taEmployeeTimesheetsesForActualShiftId = taEmployeeTimesheetsesForActualShiftId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "taWorkingShiftsByCurrentWorkingShiftId")
	public Set<TaShiftChangeSetting> getTaShiftChangeSettingsForCurrentWorkingShiftId() {
		return this.taShiftChangeSettingsForCurrentWorkingShiftId;
	}

	public void setTaShiftChangeSettingsForCurrentWorkingShiftId(
			Set<TaShiftChangeSetting> taShiftChangeSettingsForCurrentWorkingShiftId) {
		this.taShiftChangeSettingsForCurrentWorkingShiftId = taShiftChangeSettingsForCurrentWorkingShiftId;
	}

}
