package com.thienhoang.ehrm.model;
// Generated Apr 15, 2018 2:51:19 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * MasterDatas generated by hbm2java
 */
@Entity
@Table(name = "MASTER_DATAS", catalog = "eHRM_JavaResearching")
public class MasterDatas implements java.io.Serializable {

	private Integer masterDataId;
	private MasterDataTypes masterDataTypes;
	private MasterDatas masterDatas;
	private String masterDataCode;
	private String masterDataName;
	private String masterDataDescription;
	private Integer orderIndex;
	private boolean isDefault;
	private Set<MasterDatas> masterDatases = new HashSet<MasterDatas>(0);
	private Set<PublicHolidays> publicHolidayses = new HashSet<PublicHolidays>(0);
	private Set<TaOvertimeSchedules> taOvertimeScheduleses = new HashSet<TaOvertimeSchedules>(0);
	private Set<TripRequestHistories> tripRequestHistorieses = new HashSet<TripRequestHistories>(0);
	private Set<ExchangeRates> exchangeRatesesForCurrencyExchangeCategoryId = new HashSet<ExchangeRates>(0);
	private Set<EmployeeContracts> employeeContractsesForWorkingTypeId = new HashSet<EmployeeContracts>(0);
	private Set<Incomes> incomesesForCountryId = new HashSet<Incomes>(0);
	private Set<Incomes> incomesesForCurrencyId = new HashSet<Incomes>(0);
	private Set<RoleApprovalLevel> roleApprovalLevels = new HashSet<RoleApprovalLevel>(0);
	private Set<Units> unitsesForUnitTypeId = new HashSet<Units>(0);
	private Set<EmployeeEmails> employeeEmailses = new HashSet<EmployeeEmails>(0);
	private Set<TaEmployeeTimesheets> taEmployeeTimesheetses = new HashSet<TaEmployeeTimesheets>(0);
	private Set<EmployeeIncomeStats> employeeIncomeStatses = new HashSet<EmployeeIncomeStats>(0);
	private Set<MasterDataLanguages> masterDataLanguageses = new HashSet<MasterDataLanguages>(0);
	private Set<RoleModuleRights> roleModuleRightses = new HashSet<RoleModuleRights>(0);
	private Set<EmployeeRelatives> employeeRelativesesForRelativeTypeId = new HashSet<EmployeeRelatives>(0);
	private Set<EmployeeIncomeTaxStats> employeeIncomeTaxStatses = new HashSet<EmployeeIncomeTaxStats>(0);
	private Set<Employees> employeesesForGenderId = new HashSet<Employees>(0);
	private Set<EmployeeAddresses> employeeAddressesesForAddressTypeId = new HashSet<EmployeeAddresses>(0);
	private Set<EmployeeWorkbooks> employeeWorkbookses = new HashSet<EmployeeWorkbooks>(0);
	private Set<ExchangeRates> exchangeRatesesForCurrencyId = new HashSet<ExchangeRates>(0);
	private Set<ModuleRights> moduleRightses = new HashSet<ModuleRights>(0);
	private Set<Projects> projectses = new HashSet<Projects>(0);
	private Set<EmployeeRanks> employeeRankses = new HashSet<EmployeeRanks>(0);
	private Set<TripRequests> tripRequestses = new HashSet<TripRequests>(0);
	private Set<UserRoles> userRoleses = new HashSet<UserRoles>(0);
	private Set<LeaveCarryForwardRequests> leaveCarryForwardRequestsesForRequestTypeId = new HashSet<LeaveCarryForwardRequests>(
			0);
	private Set<LeaveCarryForwardRequestHistories> leaveCarryForwardRequestHistorieses = new HashSet<LeaveCarryForwardRequestHistories>(
			0);
	private Set<Incomes> incomesesForCalculatedBasingOnId = new HashSet<Incomes>(0);
	private Set<EmployeeFiles> employeeFileses = new HashSet<EmployeeFiles>(0);
	private Set<Units> unitsesForCountryId = new HashSet<Units>(0);
	private Set<EmployeeContracts> employeeContractsesForContractTypeId = new HashSet<EmployeeContracts>(0);
	private Set<Taxes> taxesesForTaxCategoryId = new HashSet<Taxes>(0);
	private Set<EmployeeLanguage> employeeLanguagesForLanguageLevelId = new HashSet<EmployeeLanguage>(0);
	private Set<Taxes> taxesesForCurrencyId = new HashSet<Taxes>(0);
	private Set<EmployeeAddresses> employeeAddressesesForLocationId = new HashSet<EmployeeAddresses>(0);
	private Set<EmployeeRelatives> employeeRelativesesForGender = new HashSet<EmployeeRelatives>(0);
	private Set<TaEmployeeOvertimes> taEmployeeOvertimeses = new HashSet<TaEmployeeOvertimes>(0);
	private Set<EmployeeAssignments> employeeAssignmentses = new HashSet<EmployeeAssignments>(0);
	private Set<EmployeePhones> employeePhoneses = new HashSet<EmployeePhones>(0);
	private Set<OutBreakRequestHistories> outBreakRequestHistorieses = new HashSet<OutBreakRequestHistories>(0);
	private Set<EmployeeWages> employeeWageses = new HashSet<EmployeeWages>(0);
	private Set<LeaveTypeCountries> leaveTypeCountrieses = new HashSet<LeaveTypeCountries>(0);
	private Set<EmployeeWorkingTitles> employeeWorkingTitleses = new HashSet<EmployeeWorkingTitles>(0);
	private Set<TaOvertimeSchedulesHistories> taOvertimeSchedulesHistorieses = new HashSet<TaOvertimeSchedulesHistories>(
			0);
	private Set<ApprovalRoles> approvalRoleses = new HashSet<ApprovalRoles>(0);
	private Set<TaEmployeeLateInEarlyOut> taEmployeeLateInEarlyOuts = new HashSet<TaEmployeeLateInEarlyOut>(0);
	private Set<IncomeModels> incomeModelses = new HashSet<IncomeModels>(0);
	private Set<EmployeeTaxes> employeeTaxeses = new HashSet<EmployeeTaxes>(0);
	private Set<LeaveCarryForwardRequests> leaveCarryForwardRequestsesForRequestStatusId = new HashSet<LeaveCarryForwardRequests>(
			0);
	private Set<Employees> employeesesForTitleId = new HashSet<Employees>(0);
	private Set<Employees> employeesesForMaritalStatusId = new HashSet<Employees>(0);
	private Set<Employees> employeesesForNationalityId = new HashSet<Employees>(0);
	private Set<PersonalTargetHistories> personalTargetHistorieses = new HashSet<PersonalTargetHistories>(0);
	private Set<RoleDepartments> roleDepartmentses = new HashSet<RoleDepartments>(0);
	private Set<LeaveRequestHistories> leaveRequestHistorieses = new HashSet<LeaveRequestHistories>(0);
	private Set<Incomes> incomesesForIncomeCategoryId = new HashSet<Incomes>(0);
	private Set<TaEmployeeTimesheets> taEmployeeTimesheetses_1 = new HashSet<TaEmployeeTimesheets>(0);
	private Set<UserModuleRoles> userModuleRoleses = new HashSet<UserModuleRoles>(0);
	private Set<EmployeeLanguage> employeeLanguagesForLanguageId = new HashSet<EmployeeLanguage>(0);
	private Set<OutBreakRequests> outBreakRequestses = new HashSet<OutBreakRequests>(0);
	private Set<EmployeeEducationLevels> employeeEducationLevelsesForEducationLevelId = new HashSet<EmployeeEducationLevels>(
			0);
	private Set<LeaveRequests> leaveRequestses = new HashSet<LeaveRequests>(0);
	private Set<EmployeeAccounts> employeeAccountses = new HashSet<EmployeeAccounts>(0);
	private Set<TripcostLocations> tripcostLocationses = new HashSet<TripcostLocations>(0);
	private Set<EmployeeEducationLevels> employeeEducationLevelsesForProfessional = new HashSet<EmployeeEducationLevels>(
			0);
	private Set<ExchangeRates> exchangeRatesesForExchangedCurrencyId = new HashSet<ExchangeRates>(0);
	private Set<BudgetedConfig> budgetedConfigs = new HashSet<BudgetedConfig>(0);
	private Set<EmployeeMissions> employeeMissionses = new HashSet<EmployeeMissions>(0);

	public MasterDatas() {
	}

	public MasterDatas(MasterDataTypes masterDataTypes, String masterDataCode, String masterDataName,
			boolean isDefault) {
		this.masterDataTypes = masterDataTypes;
		this.masterDataCode = masterDataCode;
		this.masterDataName = masterDataName;
		this.isDefault = isDefault;
	}
	public MasterDatas(Integer masterDataId)
	{
		this.masterDataId = masterDataId;
	}
	public MasterDatas(MasterDataTypes masterDataTypes, MasterDatas masterDatas, String masterDataCode,
			String masterDataName, String masterDataDescription, Integer orderIndex, boolean isDefault,
			Set<MasterDatas> masterDatases, Set<PublicHolidays> publicHolidayses,
			Set<TaOvertimeSchedules> taOvertimeScheduleses, Set<TripRequestHistories> tripRequestHistorieses,
			Set<ExchangeRates> exchangeRatesesForCurrencyExchangeCategoryId,
			Set<EmployeeContracts> employeeContractsesForWorkingTypeId, Set<Incomes> incomesesForCountryId,
			Set<Incomes> incomesesForCurrencyId, Set<RoleApprovalLevel> roleApprovalLevels,
			Set<Units> unitsesForUnitTypeId, Set<EmployeeEmails> employeeEmailses,
			Set<TaEmployeeTimesheets> taEmployeeTimesheetses, Set<EmployeeIncomeStats> employeeIncomeStatses,
			Set<MasterDataLanguages> masterDataLanguageses, Set<RoleModuleRights> roleModuleRightses,
			Set<EmployeeRelatives> employeeRelativesesForRelativeTypeId,
			Set<EmployeeIncomeTaxStats> employeeIncomeTaxStatses, Set<Employees> employeesesForGenderId,
			Set<EmployeeAddresses> employeeAddressesesForAddressTypeId, Set<EmployeeWorkbooks> employeeWorkbookses,
			Set<ExchangeRates> exchangeRatesesForCurrencyId, Set<ModuleRights> moduleRightses, Set<Projects> projectses,
			Set<EmployeeRanks> employeeRankses, Set<TripRequests> tripRequestses, Set<UserRoles> userRoleses,
			Set<LeaveCarryForwardRequests> leaveCarryForwardRequestsesForRequestTypeId,
			Set<LeaveCarryForwardRequestHistories> leaveCarryForwardRequestHistorieses,
			Set<Incomes> incomesesForCalculatedBasingOnId, Set<EmployeeFiles> employeeFileses,
			Set<Units> unitsesForCountryId, Set<EmployeeContracts> employeeContractsesForContractTypeId,
			Set<Taxes> taxesesForTaxCategoryId, Set<EmployeeLanguage> employeeLanguagesForLanguageLevelId,
			Set<Taxes> taxesesForCurrencyId, Set<EmployeeAddresses> employeeAddressesesForLocationId,
			Set<EmployeeRelatives> employeeRelativesesForGender, Set<TaEmployeeOvertimes> taEmployeeOvertimeses,
			Set<EmployeeAssignments> employeeAssignmentses, Set<EmployeePhones> employeePhoneses,
			Set<OutBreakRequestHistories> outBreakRequestHistorieses, Set<EmployeeWages> employeeWageses,
			Set<LeaveTypeCountries> leaveTypeCountrieses, Set<EmployeeWorkingTitles> employeeWorkingTitleses,
			Set<TaOvertimeSchedulesHistories> taOvertimeSchedulesHistorieses, Set<ApprovalRoles> approvalRoleses,
			Set<TaEmployeeLateInEarlyOut> taEmployeeLateInEarlyOuts, Set<IncomeModels> incomeModelses,
			Set<EmployeeTaxes> employeeTaxeses,
			Set<LeaveCarryForwardRequests> leaveCarryForwardRequestsesForRequestStatusId,
			Set<Employees> employeesesForTitleId, Set<Employees> employeesesForMaritalStatusId,
			Set<Employees> employeesesForNationalityId, Set<PersonalTargetHistories> personalTargetHistorieses,
			Set<RoleDepartments> roleDepartmentses, Set<LeaveRequestHistories> leaveRequestHistorieses,
			Set<Incomes> incomesesForIncomeCategoryId, Set<TaEmployeeTimesheets> taEmployeeTimesheetses_1,
			Set<UserModuleRoles> userModuleRoleses, Set<EmployeeLanguage> employeeLanguagesForLanguageId,
			Set<OutBreakRequests> outBreakRequestses,
			Set<EmployeeEducationLevels> employeeEducationLevelsesForEducationLevelId,
			Set<LeaveRequests> leaveRequestses, Set<EmployeeAccounts> employeeAccountses,
			Set<TripcostLocations> tripcostLocationses,
			Set<EmployeeEducationLevels> employeeEducationLevelsesForProfessional,
			Set<ExchangeRates> exchangeRatesesForExchangedCurrencyId, Set<BudgetedConfig> budgetedConfigs,
			Set<EmployeeMissions> employeeMissionses) {
		this.masterDataTypes = masterDataTypes;
		this.masterDatas = masterDatas;
		this.masterDataCode = masterDataCode;
		this.masterDataName = masterDataName;
		this.masterDataDescription = masterDataDescription;
		this.orderIndex = orderIndex;
		this.isDefault = isDefault;
		this.masterDatases = masterDatases;
		this.publicHolidayses = publicHolidayses;
		this.taOvertimeScheduleses = taOvertimeScheduleses;
		this.tripRequestHistorieses = tripRequestHistorieses;
		this.exchangeRatesesForCurrencyExchangeCategoryId = exchangeRatesesForCurrencyExchangeCategoryId;
		this.employeeContractsesForWorkingTypeId = employeeContractsesForWorkingTypeId;
		this.incomesesForCountryId = incomesesForCountryId;
		this.incomesesForCurrencyId = incomesesForCurrencyId;
		this.roleApprovalLevels = roleApprovalLevels;
		this.unitsesForUnitTypeId = unitsesForUnitTypeId;
		this.employeeEmailses = employeeEmailses;
		this.taEmployeeTimesheetses = taEmployeeTimesheetses;
		this.employeeIncomeStatses = employeeIncomeStatses;
		this.masterDataLanguageses = masterDataLanguageses;
		this.roleModuleRightses = roleModuleRightses;
		this.employeeRelativesesForRelativeTypeId = employeeRelativesesForRelativeTypeId;
		this.employeeIncomeTaxStatses = employeeIncomeTaxStatses;
		this.employeesesForGenderId = employeesesForGenderId;
		this.employeeAddressesesForAddressTypeId = employeeAddressesesForAddressTypeId;
		this.employeeWorkbookses = employeeWorkbookses;
		this.exchangeRatesesForCurrencyId = exchangeRatesesForCurrencyId;
		this.moduleRightses = moduleRightses;
		this.projectses = projectses;
		this.employeeRankses = employeeRankses;
		this.tripRequestses = tripRequestses;
		this.userRoleses = userRoleses;
		this.leaveCarryForwardRequestsesForRequestTypeId = leaveCarryForwardRequestsesForRequestTypeId;
		this.leaveCarryForwardRequestHistorieses = leaveCarryForwardRequestHistorieses;
		this.incomesesForCalculatedBasingOnId = incomesesForCalculatedBasingOnId;
		this.employeeFileses = employeeFileses;
		this.unitsesForCountryId = unitsesForCountryId;
		this.employeeContractsesForContractTypeId = employeeContractsesForContractTypeId;
		this.taxesesForTaxCategoryId = taxesesForTaxCategoryId;
		this.employeeLanguagesForLanguageLevelId = employeeLanguagesForLanguageLevelId;
		this.taxesesForCurrencyId = taxesesForCurrencyId;
		this.employeeAddressesesForLocationId = employeeAddressesesForLocationId;
		this.employeeRelativesesForGender = employeeRelativesesForGender;
		this.taEmployeeOvertimeses = taEmployeeOvertimeses;
		this.employeeAssignmentses = employeeAssignmentses;
		this.employeePhoneses = employeePhoneses;
		this.outBreakRequestHistorieses = outBreakRequestHistorieses;
		this.employeeWageses = employeeWageses;
		this.leaveTypeCountrieses = leaveTypeCountrieses;
		this.employeeWorkingTitleses = employeeWorkingTitleses;
		this.taOvertimeSchedulesHistorieses = taOvertimeSchedulesHistorieses;
		this.approvalRoleses = approvalRoleses;
		this.taEmployeeLateInEarlyOuts = taEmployeeLateInEarlyOuts;
		this.incomeModelses = incomeModelses;
		this.employeeTaxeses = employeeTaxeses;
		this.leaveCarryForwardRequestsesForRequestStatusId = leaveCarryForwardRequestsesForRequestStatusId;
		this.employeesesForTitleId = employeesesForTitleId;
		this.employeesesForMaritalStatusId = employeesesForMaritalStatusId;
		this.employeesesForNationalityId = employeesesForNationalityId;
		this.personalTargetHistorieses = personalTargetHistorieses;
		this.roleDepartmentses = roleDepartmentses;
		this.leaveRequestHistorieses = leaveRequestHistorieses;
		this.incomesesForIncomeCategoryId = incomesesForIncomeCategoryId;
		this.taEmployeeTimesheetses_1 = taEmployeeTimesheetses_1;
		this.userModuleRoleses = userModuleRoleses;
		this.employeeLanguagesForLanguageId = employeeLanguagesForLanguageId;
		this.outBreakRequestses = outBreakRequestses;
		this.employeeEducationLevelsesForEducationLevelId = employeeEducationLevelsesForEducationLevelId;
		this.leaveRequestses = leaveRequestses;
		this.employeeAccountses = employeeAccountses;
		this.tripcostLocationses = tripcostLocationses;
		this.employeeEducationLevelsesForProfessional = employeeEducationLevelsesForProfessional;
		this.exchangeRatesesForExchangedCurrencyId = exchangeRatesesForExchangedCurrencyId;
		this.budgetedConfigs = budgetedConfigs;
		this.employeeMissionses = employeeMissionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "MASTER_DATA_ID", unique = true, nullable = false)
	public Integer getMasterDataId() {
		return this.masterDataId;
	}

	public void setMasterDataId(Integer masterDataId) {
		this.masterDataId = masterDataId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MASTER_DATA_TYPE_ID", nullable = false)
	public MasterDataTypes getMasterDataTypes() {
		return this.masterDataTypes;
	}

	public void setMasterDataTypes(MasterDataTypes masterDataTypes) {
		this.masterDataTypes = masterDataTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MASTER_DATA_PARENT_ID")
	public MasterDatas getMasterDatas() {
		return this.masterDatas;
	}

	public void setMasterDatas(MasterDatas masterDatas) {
		this.masterDatas = masterDatas;
	}

	@Column(name = "MASTER_DATA_CODE", nullable = false)
	public String getMasterDataCode() {
		return this.masterDataCode;
	}

	public void setMasterDataCode(String masterDataCode) {
		this.masterDataCode = masterDataCode;
	}

	@Column(name = "MASTER_DATA_NAME", nullable = false)
	public String getMasterDataName() {
		return this.masterDataName;
	}

	public void setMasterDataName(String masterDataName) {
		this.masterDataName = masterDataName;
	}

	@Column(name = "MASTER_DATA_DESCRIPTION")
	public String getMasterDataDescription() {
		return this.masterDataDescription;
	}

	public void setMasterDataDescription(String masterDataDescription) {
		this.masterDataDescription = masterDataDescription;
	}

	@Column(name = "ORDER_INDEX")
	public Integer getOrderIndex() {
		return this.orderIndex;
	}

	public void setOrderIndex(Integer orderIndex) {
		this.orderIndex = orderIndex;
	}

	@Column(name = "IS_DEFAULT", nullable = false)
	public boolean isIsDefault() {
		return this.isDefault;
	}

	public void setIsDefault(boolean isDefault) {
		this.isDefault = isDefault;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<MasterDatas> getMasterDatases() {
		return this.masterDatases;
	}

	public void setMasterDatases(Set<MasterDatas> masterDatases) {
		this.masterDatases = masterDatases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<PublicHolidays> getPublicHolidayses() {
		return this.publicHolidayses;
	}

	public void setPublicHolidayses(Set<PublicHolidays> publicHolidayses) {
		this.publicHolidayses = publicHolidayses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<TaOvertimeSchedules> getTaOvertimeScheduleses() {
		return this.taOvertimeScheduleses;
	}

	public void setTaOvertimeScheduleses(Set<TaOvertimeSchedules> taOvertimeScheduleses) {
		this.taOvertimeScheduleses = taOvertimeScheduleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<TripRequestHistories> getTripRequestHistorieses() {
		return this.tripRequestHistorieses;
	}

	public void setTripRequestHistorieses(Set<TripRequestHistories> tripRequestHistorieses) {
		this.tripRequestHistorieses = tripRequestHistorieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByCurrencyExchangeCategoryId")
	public Set<ExchangeRates> getExchangeRatesesForCurrencyExchangeCategoryId() {
		return this.exchangeRatesesForCurrencyExchangeCategoryId;
	}

	public void setExchangeRatesesForCurrencyExchangeCategoryId(
			Set<ExchangeRates> exchangeRatesesForCurrencyExchangeCategoryId) {
		this.exchangeRatesesForCurrencyExchangeCategoryId = exchangeRatesesForCurrencyExchangeCategoryId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByWorkingTypeId")
	public Set<EmployeeContracts> getEmployeeContractsesForWorkingTypeId() {
		return this.employeeContractsesForWorkingTypeId;
	}

	public void setEmployeeContractsesForWorkingTypeId(Set<EmployeeContracts> employeeContractsesForWorkingTypeId) {
		this.employeeContractsesForWorkingTypeId = employeeContractsesForWorkingTypeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByCountryId")
	public Set<Incomes> getIncomesesForCountryId() {
		return this.incomesesForCountryId;
	}

	public void setIncomesesForCountryId(Set<Incomes> incomesesForCountryId) {
		this.incomesesForCountryId = incomesesForCountryId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByCurrencyId")
	public Set<Incomes> getIncomesesForCurrencyId() {
		return this.incomesesForCurrencyId;
	}

	public void setIncomesesForCurrencyId(Set<Incomes> incomesesForCurrencyId) {
		this.incomesesForCurrencyId = incomesesForCurrencyId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<RoleApprovalLevel> getRoleApprovalLevels() {
		return this.roleApprovalLevels;
	}

	public void setRoleApprovalLevels(Set<RoleApprovalLevel> roleApprovalLevels) {
		this.roleApprovalLevels = roleApprovalLevels;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByUnitTypeId")
	public Set<Units> getUnitsesForUnitTypeId() {
		return this.unitsesForUnitTypeId;
	}

	public void setUnitsesForUnitTypeId(Set<Units> unitsesForUnitTypeId) {
		this.unitsesForUnitTypeId = unitsesForUnitTypeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeEmails> getEmployeeEmailses() {
		return this.employeeEmailses;
	}

	public void setEmployeeEmailses(Set<EmployeeEmails> employeeEmailses) {
		this.employeeEmailses = employeeEmailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<TaEmployeeTimesheets> getTaEmployeeTimesheetses() {
		return this.taEmployeeTimesheetses;
	}

	public void setTaEmployeeTimesheetses(Set<TaEmployeeTimesheets> taEmployeeTimesheetses) {
		this.taEmployeeTimesheetses = taEmployeeTimesheetses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeIncomeStats> getEmployeeIncomeStatses() {
		return this.employeeIncomeStatses;
	}

	public void setEmployeeIncomeStatses(Set<EmployeeIncomeStats> employeeIncomeStatses) {
		this.employeeIncomeStatses = employeeIncomeStatses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<MasterDataLanguages> getMasterDataLanguageses() {
		return this.masterDataLanguageses;
	}

	public void setMasterDataLanguageses(Set<MasterDataLanguages> masterDataLanguageses) {
		this.masterDataLanguageses = masterDataLanguageses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<RoleModuleRights> getRoleModuleRightses() {
		return this.roleModuleRightses;
	}

	public void setRoleModuleRightses(Set<RoleModuleRights> roleModuleRightses) {
		this.roleModuleRightses = roleModuleRightses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByRelativeTypeId")
	public Set<EmployeeRelatives> getEmployeeRelativesesForRelativeTypeId() {
		return this.employeeRelativesesForRelativeTypeId;
	}

	public void setEmployeeRelativesesForRelativeTypeId(Set<EmployeeRelatives> employeeRelativesesForRelativeTypeId) {
		this.employeeRelativesesForRelativeTypeId = employeeRelativesesForRelativeTypeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeIncomeTaxStats> getEmployeeIncomeTaxStatses() {
		return this.employeeIncomeTaxStatses;
	}

	public void setEmployeeIncomeTaxStatses(Set<EmployeeIncomeTaxStats> employeeIncomeTaxStatses) {
		this.employeeIncomeTaxStatses = employeeIncomeTaxStatses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByGenderId")
	public Set<Employees> getEmployeesesForGenderId() {
		return this.employeesesForGenderId;
	}

	public void setEmployeesesForGenderId(Set<Employees> employeesesForGenderId) {
		this.employeesesForGenderId = employeesesForGenderId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByAddressTypeId")
	public Set<EmployeeAddresses> getEmployeeAddressesesForAddressTypeId() {
		return this.employeeAddressesesForAddressTypeId;
	}

	public void setEmployeeAddressesesForAddressTypeId(Set<EmployeeAddresses> employeeAddressesesForAddressTypeId) {
		this.employeeAddressesesForAddressTypeId = employeeAddressesesForAddressTypeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeWorkbooks> getEmployeeWorkbookses() {
		return this.employeeWorkbookses;
	}

	public void setEmployeeWorkbookses(Set<EmployeeWorkbooks> employeeWorkbookses) {
		this.employeeWorkbookses = employeeWorkbookses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByCurrencyId")
	public Set<ExchangeRates> getExchangeRatesesForCurrencyId() {
		return this.exchangeRatesesForCurrencyId;
	}

	public void setExchangeRatesesForCurrencyId(Set<ExchangeRates> exchangeRatesesForCurrencyId) {
		this.exchangeRatesesForCurrencyId = exchangeRatesesForCurrencyId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<ModuleRights> getModuleRightses() {
		return this.moduleRightses;
	}

	public void setModuleRightses(Set<ModuleRights> moduleRightses) {
		this.moduleRightses = moduleRightses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<Projects> getProjectses() {
		return this.projectses;
	}

	public void setProjectses(Set<Projects> projectses) {
		this.projectses = projectses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeRanks> getEmployeeRankses() {
		return this.employeeRankses;
	}

	public void setEmployeeRankses(Set<EmployeeRanks> employeeRankses) {
		this.employeeRankses = employeeRankses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<TripRequests> getTripRequestses() {
		return this.tripRequestses;
	}

	public void setTripRequestses(Set<TripRequests> tripRequestses) {
		this.tripRequestses = tripRequestses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<UserRoles> getUserRoleses() {
		return this.userRoleses;
	}

	public void setUserRoleses(Set<UserRoles> userRoleses) {
		this.userRoleses = userRoleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByRequestTypeId")
	public Set<LeaveCarryForwardRequests> getLeaveCarryForwardRequestsesForRequestTypeId() {
		return this.leaveCarryForwardRequestsesForRequestTypeId;
	}

	public void setLeaveCarryForwardRequestsesForRequestTypeId(
			Set<LeaveCarryForwardRequests> leaveCarryForwardRequestsesForRequestTypeId) {
		this.leaveCarryForwardRequestsesForRequestTypeId = leaveCarryForwardRequestsesForRequestTypeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<LeaveCarryForwardRequestHistories> getLeaveCarryForwardRequestHistorieses() {
		return this.leaveCarryForwardRequestHistorieses;
	}

	public void setLeaveCarryForwardRequestHistorieses(
			Set<LeaveCarryForwardRequestHistories> leaveCarryForwardRequestHistorieses) {
		this.leaveCarryForwardRequestHistorieses = leaveCarryForwardRequestHistorieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByCalculatedBasingOnId")
	public Set<Incomes> getIncomesesForCalculatedBasingOnId() {
		return this.incomesesForCalculatedBasingOnId;
	}

	public void setIncomesesForCalculatedBasingOnId(Set<Incomes> incomesesForCalculatedBasingOnId) {
		this.incomesesForCalculatedBasingOnId = incomesesForCalculatedBasingOnId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeFiles> getEmployeeFileses() {
		return this.employeeFileses;
	}

	public void setEmployeeFileses(Set<EmployeeFiles> employeeFileses) {
		this.employeeFileses = employeeFileses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByCountryId")
	public Set<Units> getUnitsesForCountryId() {
		return this.unitsesForCountryId;
	}

	public void setUnitsesForCountryId(Set<Units> unitsesForCountryId) {
		this.unitsesForCountryId = unitsesForCountryId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByContractTypeId")
	public Set<EmployeeContracts> getEmployeeContractsesForContractTypeId() {
		return this.employeeContractsesForContractTypeId;
	}

	public void setEmployeeContractsesForContractTypeId(Set<EmployeeContracts> employeeContractsesForContractTypeId) {
		this.employeeContractsesForContractTypeId = employeeContractsesForContractTypeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByTaxCategoryId")
	public Set<Taxes> getTaxesesForTaxCategoryId() {
		return this.taxesesForTaxCategoryId;
	}

	public void setTaxesesForTaxCategoryId(Set<Taxes> taxesesForTaxCategoryId) {
		this.taxesesForTaxCategoryId = taxesesForTaxCategoryId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByLanguageLevelId")
	public Set<EmployeeLanguage> getEmployeeLanguagesForLanguageLevelId() {
		return this.employeeLanguagesForLanguageLevelId;
	}

	public void setEmployeeLanguagesForLanguageLevelId(Set<EmployeeLanguage> employeeLanguagesForLanguageLevelId) {
		this.employeeLanguagesForLanguageLevelId = employeeLanguagesForLanguageLevelId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByCurrencyId")
	public Set<Taxes> getTaxesesForCurrencyId() {
		return this.taxesesForCurrencyId;
	}

	public void setTaxesesForCurrencyId(Set<Taxes> taxesesForCurrencyId) {
		this.taxesesForCurrencyId = taxesesForCurrencyId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByLocationId")
	public Set<EmployeeAddresses> getEmployeeAddressesesForLocationId() {
		return this.employeeAddressesesForLocationId;
	}

	public void setEmployeeAddressesesForLocationId(Set<EmployeeAddresses> employeeAddressesesForLocationId) {
		this.employeeAddressesesForLocationId = employeeAddressesesForLocationId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByGender")
	public Set<EmployeeRelatives> getEmployeeRelativesesForGender() {
		return this.employeeRelativesesForGender;
	}

	public void setEmployeeRelativesesForGender(Set<EmployeeRelatives> employeeRelativesesForGender) {
		this.employeeRelativesesForGender = employeeRelativesesForGender;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<TaEmployeeOvertimes> getTaEmployeeOvertimeses() {
		return this.taEmployeeOvertimeses;
	}

	public void setTaEmployeeOvertimeses(Set<TaEmployeeOvertimes> taEmployeeOvertimeses) {
		this.taEmployeeOvertimeses = taEmployeeOvertimeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeAssignments> getEmployeeAssignmentses() {
		return this.employeeAssignmentses;
	}

	public void setEmployeeAssignmentses(Set<EmployeeAssignments> employeeAssignmentses) {
		this.employeeAssignmentses = employeeAssignmentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeePhones> getEmployeePhoneses() {
		return this.employeePhoneses;
	}

	public void setEmployeePhoneses(Set<EmployeePhones> employeePhoneses) {
		this.employeePhoneses = employeePhoneses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<OutBreakRequestHistories> getOutBreakRequestHistorieses() {
		return this.outBreakRequestHistorieses;
	}

	public void setOutBreakRequestHistorieses(Set<OutBreakRequestHistories> outBreakRequestHistorieses) {
		this.outBreakRequestHistorieses = outBreakRequestHistorieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeWages> getEmployeeWageses() {
		return this.employeeWageses;
	}

	public void setEmployeeWageses(Set<EmployeeWages> employeeWageses) {
		this.employeeWageses = employeeWageses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<LeaveTypeCountries> getLeaveTypeCountrieses() {
		return this.leaveTypeCountrieses;
	}

	public void setLeaveTypeCountrieses(Set<LeaveTypeCountries> leaveTypeCountrieses) {
		this.leaveTypeCountrieses = leaveTypeCountrieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeWorkingTitles> getEmployeeWorkingTitleses() {
		return this.employeeWorkingTitleses;
	}

	public void setEmployeeWorkingTitleses(Set<EmployeeWorkingTitles> employeeWorkingTitleses) {
		this.employeeWorkingTitleses = employeeWorkingTitleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<TaOvertimeSchedulesHistories> getTaOvertimeSchedulesHistorieses() {
		return this.taOvertimeSchedulesHistorieses;
	}

	public void setTaOvertimeSchedulesHistorieses(Set<TaOvertimeSchedulesHistories> taOvertimeSchedulesHistorieses) {
		this.taOvertimeSchedulesHistorieses = taOvertimeSchedulesHistorieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<ApprovalRoles> getApprovalRoleses() {
		return this.approvalRoleses;
	}

	public void setApprovalRoleses(Set<ApprovalRoles> approvalRoleses) {
		this.approvalRoleses = approvalRoleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<TaEmployeeLateInEarlyOut> getTaEmployeeLateInEarlyOuts() {
		return this.taEmployeeLateInEarlyOuts;
	}

	public void setTaEmployeeLateInEarlyOuts(Set<TaEmployeeLateInEarlyOut> taEmployeeLateInEarlyOuts) {
		this.taEmployeeLateInEarlyOuts = taEmployeeLateInEarlyOuts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<IncomeModels> getIncomeModelses() {
		return this.incomeModelses;
	}

	public void setIncomeModelses(Set<IncomeModels> incomeModelses) {
		this.incomeModelses = incomeModelses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeTaxes> getEmployeeTaxeses() {
		return this.employeeTaxeses;
	}

	public void setEmployeeTaxeses(Set<EmployeeTaxes> employeeTaxeses) {
		this.employeeTaxeses = employeeTaxeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByRequestStatusId")
	public Set<LeaveCarryForwardRequests> getLeaveCarryForwardRequestsesForRequestStatusId() {
		return this.leaveCarryForwardRequestsesForRequestStatusId;
	}

	public void setLeaveCarryForwardRequestsesForRequestStatusId(
			Set<LeaveCarryForwardRequests> leaveCarryForwardRequestsesForRequestStatusId) {
		this.leaveCarryForwardRequestsesForRequestStatusId = leaveCarryForwardRequestsesForRequestStatusId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByTitleId")
	public Set<Employees> getEmployeesesForTitleId() {
		return this.employeesesForTitleId;
	}

	public void setEmployeesesForTitleId(Set<Employees> employeesesForTitleId) {
		this.employeesesForTitleId = employeesesForTitleId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByMaritalStatusId")
	public Set<Employees> getEmployeesesForMaritalStatusId() {
		return this.employeesesForMaritalStatusId;
	}

	public void setEmployeesesForMaritalStatusId(Set<Employees> employeesesForMaritalStatusId) {
		this.employeesesForMaritalStatusId = employeesesForMaritalStatusId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByNationalityId")
	public Set<Employees> getEmployeesesForNationalityId() {
		return this.employeesesForNationalityId;
	}

	public void setEmployeesesForNationalityId(Set<Employees> employeesesForNationalityId) {
		this.employeesesForNationalityId = employeesesForNationalityId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<PersonalTargetHistories> getPersonalTargetHistorieses() {
		return this.personalTargetHistorieses;
	}

	public void setPersonalTargetHistorieses(Set<PersonalTargetHistories> personalTargetHistorieses) {
		this.personalTargetHistorieses = personalTargetHistorieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<RoleDepartments> getRoleDepartmentses() {
		return this.roleDepartmentses;
	}

	public void setRoleDepartmentses(Set<RoleDepartments> roleDepartmentses) {
		this.roleDepartmentses = roleDepartmentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<LeaveRequestHistories> getLeaveRequestHistorieses() {
		return this.leaveRequestHistorieses;
	}

	public void setLeaveRequestHistorieses(Set<LeaveRequestHistories> leaveRequestHistorieses) {
		this.leaveRequestHistorieses = leaveRequestHistorieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByIncomeCategoryId")
	public Set<Incomes> getIncomesesForIncomeCategoryId() {
		return this.incomesesForIncomeCategoryId;
	}

	public void setIncomesesForIncomeCategoryId(Set<Incomes> incomesesForIncomeCategoryId) {
		this.incomesesForIncomeCategoryId = incomesesForIncomeCategoryId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<TaEmployeeTimesheets> getTaEmployeeTimesheetses_1() {
		return this.taEmployeeTimesheetses_1;
	}

	public void setTaEmployeeTimesheetses_1(Set<TaEmployeeTimesheets> taEmployeeTimesheetses_1) {
		this.taEmployeeTimesheetses_1 = taEmployeeTimesheetses_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<UserModuleRoles> getUserModuleRoleses() {
		return this.userModuleRoleses;
	}

	public void setUserModuleRoleses(Set<UserModuleRoles> userModuleRoleses) {
		this.userModuleRoleses = userModuleRoleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "languages")
	public Set<EmployeeLanguage> getEmployeeLanguagesForLanguageId() {
		return this.employeeLanguagesForLanguageId;
	}

	public void setEmployeeLanguagesForLanguageId(Set<EmployeeLanguage> employeeLanguagesForLanguageId) {
		this.employeeLanguagesForLanguageId = employeeLanguagesForLanguageId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<OutBreakRequests> getOutBreakRequestses() {
		return this.outBreakRequestses;
	}

	public void setOutBreakRequestses(Set<OutBreakRequests> outBreakRequestses) {
		this.outBreakRequestses = outBreakRequestses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByEducationLevelId")
	public Set<EmployeeEducationLevels> getEmployeeEducationLevelsesForEducationLevelId() {
		return this.employeeEducationLevelsesForEducationLevelId;
	}

	public void setEmployeeEducationLevelsesForEducationLevelId(
			Set<EmployeeEducationLevels> employeeEducationLevelsesForEducationLevelId) {
		this.employeeEducationLevelsesForEducationLevelId = employeeEducationLevelsesForEducationLevelId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<LeaveRequests> getLeaveRequestses() {
		return this.leaveRequestses;
	}

	public void setLeaveRequestses(Set<LeaveRequests> leaveRequestses) {
		this.leaveRequestses = leaveRequestses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeAccounts> getEmployeeAccountses() {
		return this.employeeAccountses;
	}

	public void setEmployeeAccountses(Set<EmployeeAccounts> employeeAccountses) {
		this.employeeAccountses = employeeAccountses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<TripcostLocations> getTripcostLocationses() {
		return this.tripcostLocationses;
	}

	public void setTripcostLocationses(Set<TripcostLocations> tripcostLocationses) {
		this.tripcostLocationses = tripcostLocationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByProfessional")
	public Set<EmployeeEducationLevels> getEmployeeEducationLevelsesForProfessional() {
		return this.employeeEducationLevelsesForProfessional;
	}

	public void setEmployeeEducationLevelsesForProfessional(
			Set<EmployeeEducationLevels> employeeEducationLevelsesForProfessional) {
		this.employeeEducationLevelsesForProfessional = employeeEducationLevelsesForProfessional;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatasByExchangedCurrencyId")
	public Set<ExchangeRates> getExchangeRatesesForExchangedCurrencyId() {
		return this.exchangeRatesesForExchangedCurrencyId;
	}

	public void setExchangeRatesesForExchangedCurrencyId(Set<ExchangeRates> exchangeRatesesForExchangedCurrencyId) {
		this.exchangeRatesesForExchangedCurrencyId = exchangeRatesesForExchangedCurrencyId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<BudgetedConfig> getBudgetedConfigs() {
		return this.budgetedConfigs;
	}

	public void setBudgetedConfigs(Set<BudgetedConfig> budgetedConfigs) {
		this.budgetedConfigs = budgetedConfigs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "masterDatas")
	public Set<EmployeeMissions> getEmployeeMissionses() {
		return this.employeeMissionses;
	}

	public void setEmployeeMissionses(Set<EmployeeMissions> employeeMissionses) {
		this.employeeMissionses = employeeMissionses;
	}

	@Override
	public String toString() {
		return "MasterDatas [masterDataTypes=" + masterDataTypes.getMasterdataTypeId() + ", masterDataCode=" + masterDataCode
				+ ", masterDataName=" + masterDataName + ", masterDataDescription=" + masterDataDescription + "]";
	}
	
}
