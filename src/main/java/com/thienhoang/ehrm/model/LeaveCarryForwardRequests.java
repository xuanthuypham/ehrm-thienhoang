package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * LeaveCarryForwardRequests generated by hbm2java
 */
@Entity
@Table(name = "LEAVE_CARRY_FORWARD_REQUESTS", catalog = "eHRM_JavaResearching")
public class LeaveCarryForwardRequests implements java.io.Serializable {

	private Integer requestId;
	private Employees employees;
	private FinancialYears financialYears;
	private MasterDatas masterDatasByRequestTypeId;
	private MasterDatas masterDatasByRequestStatusId;
	private Date requestDate;
	private double noOfBalanceDays;
	private double noOfForwardDays;
	private Serializable requestContent;
	private Set<LeaveCarryForwardRequestHistories> leaveCarryForwardRequestHistorieses = new HashSet<LeaveCarryForwardRequestHistories>(
			0);

	public LeaveCarryForwardRequests() {
	}

	public LeaveCarryForwardRequests(Employees employees, FinancialYears financialYears,
			MasterDatas masterDatasByRequestTypeId, MasterDatas masterDatasByRequestStatusId, Date requestDate,
			double noOfBalanceDays, double noOfForwardDays) {
		this.employees = employees;
		this.financialYears = financialYears;
		this.masterDatasByRequestTypeId = masterDatasByRequestTypeId;
		this.masterDatasByRequestStatusId = masterDatasByRequestStatusId;
		this.requestDate = requestDate;
		this.noOfBalanceDays = noOfBalanceDays;
		this.noOfForwardDays = noOfForwardDays;
	}

	public LeaveCarryForwardRequests(Employees employees, FinancialYears financialYears,
			MasterDatas masterDatasByRequestTypeId, MasterDatas masterDatasByRequestStatusId, Date requestDate,
			double noOfBalanceDays, double noOfForwardDays, Serializable requestContent,
			Set<LeaveCarryForwardRequestHistories> leaveCarryForwardRequestHistorieses) {
		this.employees = employees;
		this.financialYears = financialYears;
		this.masterDatasByRequestTypeId = masterDatasByRequestTypeId;
		this.masterDatasByRequestStatusId = masterDatasByRequestStatusId;
		this.requestDate = requestDate;
		this.noOfBalanceDays = noOfBalanceDays;
		this.noOfForwardDays = noOfForwardDays;
		this.requestContent = requestContent;
		this.leaveCarryForwardRequestHistorieses = leaveCarryForwardRequestHistorieses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "REQUEST_ID", unique = true, nullable = false)
	public Integer getRequestId() {
		return this.requestId;
	}

	public void setRequestId(Integer requestId) {
		this.requestId = requestId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_ID", nullable = false)
	public Employees getEmployees() {
		return this.employees;
	}

	public void setEmployees(Employees employees) {
		this.employees = employees;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FINANCIAL_YEAR_ID", nullable = false)
	public FinancialYears getFinancialYears() {
		return this.financialYears;
	}

	public void setFinancialYears(FinancialYears financialYears) {
		this.financialYears = financialYears;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REQUEST_TYPE_ID", nullable = false)
	public MasterDatas getMasterDatasByRequestTypeId() {
		return this.masterDatasByRequestTypeId;
	}

	public void setMasterDatasByRequestTypeId(MasterDatas masterDatasByRequestTypeId) {
		this.masterDatasByRequestTypeId = masterDatasByRequestTypeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REQUEST_STATUS_ID", nullable = false)
	public MasterDatas getMasterDatasByRequestStatusId() {
		return this.masterDatasByRequestStatusId;
	}

	public void setMasterDatasByRequestStatusId(MasterDatas masterDatasByRequestStatusId) {
		this.masterDatasByRequestStatusId = masterDatasByRequestStatusId;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "REQUEST_DATE", nullable = false, length = 10)
	public Date getRequestDate() {
		return this.requestDate;
	}

	public void setRequestDate(Date requestDate) {
		this.requestDate = requestDate;
	}

	@Column(name = "NO_OF_BALANCE_DAYS", nullable = false, precision = 53, scale = 0)
	public double getNoOfBalanceDays() {
		return this.noOfBalanceDays;
	}

	public void setNoOfBalanceDays(double noOfBalanceDays) {
		this.noOfBalanceDays = noOfBalanceDays;
	}

	@Column(name = "NO_OF_FORWARD_DAYS", nullable = false, precision = 53, scale = 0)
	public double getNoOfForwardDays() {
		return this.noOfForwardDays;
	}

	public void setNoOfForwardDays(double noOfForwardDays) {
		this.noOfForwardDays = noOfForwardDays;
	}

	@Column(name = "REQUEST_CONTENT")
	public Serializable getRequestContent() {
		return this.requestContent;
	}

	public void setRequestContent(Serializable requestContent) {
		this.requestContent = requestContent;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "leaveCarryForwardRequests")
	public Set<LeaveCarryForwardRequestHistories> getLeaveCarryForwardRequestHistorieses() {
		return this.leaveCarryForwardRequestHistorieses;
	}

	public void setLeaveCarryForwardRequestHistorieses(
			Set<LeaveCarryForwardRequestHistories> leaveCarryForwardRequestHistorieses) {
		this.leaveCarryForwardRequestHistorieses = leaveCarryForwardRequestHistorieses;
	}

}
