package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Units generated by hbm2java
 */
@Entity
@Table(name = "UNITS", catalog = "eHRM_JavaResearching")
public class Units implements java.io.Serializable {

	private Integer unitId;
	private Employees employeesByHrManagerId;
	private Employees employeesByManagerId;
	private MasterDatas masterDatasByUnitTypeId;
	private MasterDatas masterDatasByCountryId;
	private Units units;
	private String unitName;
	private String unitCode;
	private String unitDescription;
	private boolean active;
	private String unitAddress;
	private Set<Units> unitses = new HashSet<Units>(0);
	private Set<EmployeeUnits> employeeUnitses = new HashSet<EmployeeUnits>(0);
	private Set<TaWorkingCalendars> taWorkingCalendarses = new HashSet<TaWorkingCalendars>(0);
	private Set<BudgetedConfig> budgetedConfigs = new HashSet<BudgetedConfig>(0);
	private Set<EmployeeContracts> employeeContractses = new HashSet<EmployeeContracts>(0);
	private Set<RoleDepartments> roleDepartmentses = new HashSet<RoleDepartments>(0);
	private Set<UserUnitRights> userUnitRightses = new HashSet<UserUnitRights>(0);

	public Units() {
	}

	public Units(MasterDatas masterDatasByUnitTypeId, MasterDatas masterDatasByCountryId, String unitName,
			String unitCode, boolean active) {
		this.masterDatasByUnitTypeId = masterDatasByUnitTypeId;
		this.masterDatasByCountryId = masterDatasByCountryId;
		this.unitName = unitName;
		this.unitCode = unitCode;
		this.active = active;
	}

	public Units(Employees employeesByHrManagerId, Employees employeesByManagerId, MasterDatas masterDatasByUnitTypeId,
			MasterDatas masterDatasByCountryId, Units units, String unitName, String unitCode,
			String unitDescription, boolean active, String unitAddress, Set<Units> unitses,
			Set<EmployeeUnits> employeeUnitses, Set<TaWorkingCalendars> taWorkingCalendarses,
			Set<BudgetedConfig> budgetedConfigs, Set<EmployeeContracts> employeeContractses,
			Set<RoleDepartments> roleDepartmentses, Set<UserUnitRights> userUnitRightses) {
		this.employeesByHrManagerId = employeesByHrManagerId;
		this.employeesByManagerId = employeesByManagerId;
		this.masterDatasByUnitTypeId = masterDatasByUnitTypeId;
		this.masterDatasByCountryId = masterDatasByCountryId;
		this.units = units;
		this.unitName = unitName;
		this.unitCode = unitCode;
		this.unitDescription = unitDescription;
		this.active = active;
		this.unitAddress = unitAddress;
		this.unitses = unitses;
		this.employeeUnitses = employeeUnitses;
		this.taWorkingCalendarses = taWorkingCalendarses;
		this.budgetedConfigs = budgetedConfigs;
		this.employeeContractses = employeeContractses;
		this.roleDepartmentses = roleDepartmentses;
		this.userUnitRightses = userUnitRightses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "UNIT_ID", unique = true, nullable = false)
	public Integer getUnitId() {
		return this.unitId;
	}

	public void setUnitId(Integer unitId) {
		this.unitId = unitId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HR_MANAGER_ID")
	public Employees getEmployeesByHrManagerId() {
		return this.employeesByHrManagerId;
	}

	public void setEmployeesByHrManagerId(Employees employeesByHrManagerId) {
		this.employeesByHrManagerId = employeesByHrManagerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MANAGER_ID")
	public Employees getEmployeesByManagerId() {
		return this.employeesByManagerId;
	}

	public void setEmployeesByManagerId(Employees employeesByManagerId) {
		this.employeesByManagerId = employeesByManagerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNIT_TYPE_ID", nullable = false)
	public MasterDatas getMasterDatasByUnitTypeId() {
		return this.masterDatasByUnitTypeId;
	}

	public void setMasterDatasByUnitTypeId(MasterDatas masterDatasByUnitTypeId) {
		this.masterDatasByUnitTypeId = masterDatasByUnitTypeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COUNTRY_ID", nullable = false)
	public MasterDatas getMasterDatasByCountryId() {
		return this.masterDatasByCountryId;
	}

	public void setMasterDatasByCountryId(MasterDatas masterDatasByCountryId) {
		this.masterDatasByCountryId = masterDatasByCountryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNIT_PARENT_ID")
	public Units getUnits() {
		return this.units;
	}

	public void setUnits(Units units) {
		this.units = units;
	}

	@Column(name = "UNIT_NAME", nullable = false)
	public String getUnitName() {
		return this.unitName;
	}

	public void setUnitName(String unitName) {
		this.unitName = unitName;
	}

	@Column(name = "UNIT_CODE", nullable = false)
	public String getUnitCode() {
		return this.unitCode;
	}

	public void setUnitCode(String unitCode) {
		this.unitCode = unitCode;
	}

	@Column(name = "UNIT_DESCRIPTION")
	public String getUnitDescription() {
		return this.unitDescription;
	}

	public void setUnitDescription(String unitDescription) {
		this.unitDescription = unitDescription;
	}

	@Column(name = "ACTIVE", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "UNIT_ADDRESS")
	public String getUnitAddress() {
		return this.unitAddress;
	}

	public void setUnitAddress(String unitAddress) {
		this.unitAddress = unitAddress;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "units")
	public Set<Units> getUnitses() {
		return this.unitses;
	}

	public void setUnitses(Set<Units> unitses) {
		this.unitses = unitses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "units")
	public Set<EmployeeUnits> getEmployeeUnitses() {
		return this.employeeUnitses;
	}

	public void setEmployeeUnitses(Set<EmployeeUnits> employeeUnitses) {
		this.employeeUnitses = employeeUnitses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "units")
	public Set<TaWorkingCalendars> getTaWorkingCalendarses() {
		return this.taWorkingCalendarses;
	}

	public void setTaWorkingCalendarses(Set<TaWorkingCalendars> taWorkingCalendarses) {
		this.taWorkingCalendarses = taWorkingCalendarses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "units")
	public Set<BudgetedConfig> getBudgetedConfigs() {
		return this.budgetedConfigs;
	}

	public void setBudgetedConfigs(Set<BudgetedConfig> budgetedConfigs) {
		this.budgetedConfigs = budgetedConfigs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "units")
	public Set<EmployeeContracts> getEmployeeContractses() {
		return this.employeeContractses;
	}

	public void setEmployeeContractses(Set<EmployeeContracts> employeeContractses) {
		this.employeeContractses = employeeContractses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "units")
	public Set<RoleDepartments> getRoleDepartmentses() {
		return this.roleDepartmentses;
	}

	public void setRoleDepartmentses(Set<RoleDepartments> roleDepartmentses) {
		this.roleDepartmentses = roleDepartmentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "units")
	public Set<UserUnitRights> getUserUnitRightses() {
		return this.userUnitRightses;
	}

	public void setUserUnitRightses(Set<UserUnitRights> userUnitRightses) {
		this.userUnitRightses = userUnitRightses;
	}

}
