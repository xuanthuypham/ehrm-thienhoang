package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TripLocations generated by hbm2java
 */
@Entity
@Table(name = "TRIP_LOCATIONS", catalog = "eHRM_JavaResearching")
public class TripLocations implements java.io.Serializable {

	private Integer tripLocationId;
	private Locations locations;
	private TripRequests tripRequests;
	private Date startDate;
	private Date endDate;
	private BigDecimal taxfree;
	private BigDecimal taxable;
	private BigDecimal total;
	private Double noOfCalendarDays;
	private Double noOfWorkingDays;
	private BigDecimal food;
	private BigDecimal laundry;
	private BigDecimal hotel;
	private BigDecimal project;
	private BigDecimal transport;
	private Set<AprovalTripcosts> aprovalTripcostses = new HashSet<AprovalTripcosts>(0);
	private Set<TripLocationProjects> tripLocationProjectses = new HashSet<TripLocationProjects>(0);

	public TripLocations() {
	}

	public TripLocations(Locations locations, TripRequests tripRequests, Date startDate, Date endDate,
			BigDecimal taxfree, BigDecimal taxable, BigDecimal total, Double noOfCalendarDays, Double noOfWorkingDays,
			BigDecimal food, BigDecimal laundry, BigDecimal hotel, BigDecimal project, BigDecimal transport,
			Set<AprovalTripcosts> aprovalTripcostses, Set<TripLocationProjects> tripLocationProjectses) {
		this.locations = locations;
		this.tripRequests = tripRequests;
		this.startDate = startDate;
		this.endDate = endDate;
		this.taxfree = taxfree;
		this.taxable = taxable;
		this.total = total;
		this.noOfCalendarDays = noOfCalendarDays;
		this.noOfWorkingDays = noOfWorkingDays;
		this.food = food;
		this.laundry = laundry;
		this.hotel = hotel;
		this.project = project;
		this.transport = transport;
		this.aprovalTripcostses = aprovalTripcostses;
		this.tripLocationProjectses = tripLocationProjectses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "TRIP_LOCATION_ID", unique = true, nullable = false)
	public Integer getTripLocationId() {
		return this.tripLocationId;
	}

	public void setTripLocationId(Integer tripLocationId) {
		this.tripLocationId = tripLocationId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LOCATION_ID")
	public Locations getLocations() {
		return this.locations;
	}

	public void setLocations(Locations locations) {
		this.locations = locations;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRIP_REQUEST_ID")
	public TripRequests getTripRequests() {
		return this.tripRequests;
	}

	public void setTripRequests(TripRequests tripRequests) {
		this.tripRequests = tripRequests;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "START_DATE", length = 23)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "END_DATE", length = 23)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "TAXFREE", precision = 18, scale = 8)
	public BigDecimal getTaxfree() {
		return this.taxfree;
	}

	public void setTaxfree(BigDecimal taxfree) {
		this.taxfree = taxfree;
	}

	@Column(name = "TAXABLE", precision = 18, scale = 8)
	public BigDecimal getTaxable() {
		return this.taxable;
	}

	public void setTaxable(BigDecimal taxable) {
		this.taxable = taxable;
	}

	@Column(name = "TOTAL", precision = 18, scale = 8)
	public BigDecimal getTotal() {
		return this.total;
	}

	public void setTotal(BigDecimal total) {
		this.total = total;
	}

	@Column(name = "NO_OF_CALENDAR_DAYS", precision = 53, scale = 0)
	public Double getNoOfCalendarDays() {
		return this.noOfCalendarDays;
	}

	public void setNoOfCalendarDays(Double noOfCalendarDays) {
		this.noOfCalendarDays = noOfCalendarDays;
	}

	@Column(name = "NO_OF_WORKING_DAYS", precision = 53, scale = 0)
	public Double getNoOfWorkingDays() {
		return this.noOfWorkingDays;
	}

	public void setNoOfWorkingDays(Double noOfWorkingDays) {
		this.noOfWorkingDays = noOfWorkingDays;
	}

	@Column(name = "FOOD", precision = 18, scale = 8)
	public BigDecimal getFood() {
		return this.food;
	}

	public void setFood(BigDecimal food) {
		this.food = food;
	}

	@Column(name = "LAUNDRY", precision = 18, scale = 8)
	public BigDecimal getLaundry() {
		return this.laundry;
	}

	public void setLaundry(BigDecimal laundry) {
		this.laundry = laundry;
	}

	@Column(name = "HOTEL", precision = 18, scale = 8)
	public BigDecimal getHotel() {
		return this.hotel;
	}

	public void setHotel(BigDecimal hotel) {
		this.hotel = hotel;
	}

	@Column(name = "PROJECT", precision = 18, scale = 8)
	public BigDecimal getProject() {
		return this.project;
	}

	public void setProject(BigDecimal project) {
		this.project = project;
	}

	@Column(name = "TRANSPORT", precision = 18, scale = 8)
	public BigDecimal getTransport() {
		return this.transport;
	}

	public void setTransport(BigDecimal transport) {
		this.transport = transport;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tripLocations")
	public Set<AprovalTripcosts> getAprovalTripcostses() {
		return this.aprovalTripcostses;
	}

	public void setAprovalTripcostses(Set<AprovalTripcosts> aprovalTripcostses) {
		this.aprovalTripcostses = aprovalTripcostses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tripLocations")
	public Set<TripLocationProjects> getTripLocationProjectses() {
		return this.tripLocationProjectses;
	}

	public void setTripLocationProjectses(Set<TripLocationProjects> tripLocationProjectses) {
		this.tripLocationProjectses = tripLocationProjectses;
	}

}
