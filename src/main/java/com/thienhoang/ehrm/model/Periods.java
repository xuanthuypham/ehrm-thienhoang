package com.thienhoang.ehrm.model;
// Generated Apr 22, 2018 7:20:49 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Periods generated by hbm2java
 */
@Entity
@Table(name = "PERIODS", catalog = "eHRM_JavaResearching")
public class Periods implements java.io.Serializable {

	private Integer periodId;
	private FinancialYears financialYears;
	private Date startDate;
	private Date endDate;
	private boolean isClosed;
	private String periodName;
	private Set<EmployeeIncomeStats> employeeIncomeStatses = new HashSet<EmployeeIncomeStats>(0);
	private Set<EmployeeIncomes> employeeIncomeses = new HashSet<EmployeeIncomes>(0);
	private Set<EmployeeTaxes> employeeTaxeses = new HashSet<EmployeeTaxes>(0);
	private Set<EmployeeWorkingDays> employeeWorkingDayses = new HashSet<EmployeeWorkingDays>(0);

	public Periods() {
	}

	public Periods(FinancialYears financialYears, Date startDate, Date endDate, boolean isClosed) {
		this.financialYears = financialYears;
		this.startDate = startDate;
		this.endDate = endDate;
		this.isClosed = isClosed;
	}

	public Periods(FinancialYears financialYears, Date startDate, Date endDate, boolean isClosed,
			String periodName, Set<EmployeeIncomeStats> employeeIncomeStatses,
			Set<EmployeeIncomes> employeeIncomeses, Set<EmployeeTaxes> employeeTaxeses,
			Set<EmployeeWorkingDays> employeeWorkingDayses) {
		this.financialYears = financialYears;
		this.startDate = startDate;
		this.endDate = endDate;
		this.isClosed = isClosed;
		this.periodName = periodName;
		this.employeeIncomeStatses = employeeIncomeStatses;
		this.employeeIncomeses = employeeIncomeses;
		this.employeeTaxeses = employeeTaxeses;
		this.employeeWorkingDayses = employeeWorkingDayses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "PERIOD_ID", unique = true, nullable = false)
	public Integer getPeriodId() {
		return this.periodId;
	}

	public void setPeriodId(Integer periodId) {
		this.periodId = periodId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXERCISE_ID", nullable = false)
	public FinancialYears getFinancialYears() {
		return this.financialYears;
	}

	public void setFinancialYears(FinancialYears financialYears) {
		this.financialYears = financialYears;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "START_DATE", nullable = false, length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "END_DATE", nullable = false, length = 10)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "IS_CLOSED", nullable = false)
	public boolean isIsClosed() {
		return this.isClosed;
	}

	public void setIsClosed(boolean isClosed) {
		this.isClosed = isClosed;
	}

	@Column(name = "PERIOD_NAME")
	public String getPeriodName() {
		return this.periodName;
	}

	public void setPeriodName(String periodName) {
		this.periodName = periodName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periods")
	public Set<EmployeeIncomeStats> getEmployeeIncomeStatses() {
		return this.employeeIncomeStatses;
	}

	public void setEmployeeIncomeStatses(Set<EmployeeIncomeStats> employeeIncomeStatses) {
		this.employeeIncomeStatses = employeeIncomeStatses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periods")
	public Set<EmployeeIncomes> getEmployeeIncomeses() {
		return this.employeeIncomeses;
	}

	public void setEmployeeIncomeses(Set<EmployeeIncomes> employeeIncomeses) {
		this.employeeIncomeses = employeeIncomeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periods")
	public Set<EmployeeTaxes> getEmployeeTaxeses() {
		return this.employeeTaxeses;
	}

	public void setEmployeeTaxeses(Set<EmployeeTaxes> employeeTaxeses) {
		this.employeeTaxeses = employeeTaxeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periods")
	public Set<EmployeeWorkingDays> getEmployeeWorkingDayses() {
		return this.employeeWorkingDayses;
	}

	public void setEmployeeWorkingDayses(Set<EmployeeWorkingDays> employeeWorkingDayses) {
		this.employeeWorkingDayses = employeeWorkingDayses;
	}

	@Override
	public String toString() {
		return "Periods [periodId=" + periodId  + ", startDate=" + startDate
				+ ", endDate=" + endDate + ", isClosed=" + isClosed + ", periodName=" + periodName + "]";
	}
	
}
